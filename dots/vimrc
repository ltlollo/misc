set nocompatible
set hidden
filetype off

nnoremap <leader>jd :YcmCompleter GoTo<CR>

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
set laststatus=0

highlight LongLine ctermbg=DarkYellow guibg=DarkYellow
highlight WhitespaceEOL ctermbg=DarkYellow guibg=DarkYellow
au BufWinEnter * let w:m0=matchadd('LongLine', '\%>80v.\+', -1)
au BufWinEnter * let w:m1=matchadd('WhitespaceEOL', '\s\+$', -1)
au InsertEnter * call matchdelete(w:m1)
au InsertEnter * let w:m2=matchadd('WhitespaceEOL', '\s\+\%#\@<!$', -1)
au InsertLeave * call matchdelete(w:m2)
au InsertLeave * let w:m1=matchadd('WhitespaceEOL', '\s\+$', -1)
au BufRead,BufNewFile *.txt,*.tex
            \ set wrap linebreak nolist textwidth=0 wrapmargin=0

augroup csrc
	au!
	autocmd FileType *      set nocindent smartindent
	autocmd FileType c,cpp  set cindent
augroup END

set cinoptions=:0,g0,(0,Ws,l1

command! DeleteTrailingWs :%s/\s\+$//
command! Untab :%s/\t/  /g

"filetype indent plugin on
syntax on
set smartcase
set wildmenu
set showcmd
set confirm

set backspace=indent,eol,start
"set autoindent
"set expandtab
"set smarttab
"set sw=8 ts=8 sts=0

set softtabstop=0
set shiftwidth=4
set tabstop=4
set noexpandtab
set copyindent
set preserveindent
setl cinoptions=(4,m1,10)


set showmatch
set mat=2
set noerrorbells

set t_Co=256

color diokai

set colorcolumn=80
"set textwidth=80
"set tw=80
set whichwrap+=<,>,h,l,[,]

map <C-K> :pyf /usr/share/vim/addons/syntax/clang-format.py<cr>
imap <C-K> <c-o>:pyf /usr/share/vim/addons/syntax/clang-format.py<cr>

vmap <C-c> y:call system("xclip -i -selection clipboard", getreg("\""))<CR>
            \:call system("xclip -i", getreg("\""))<CR>
nmap <C-i> :call setreg("\"",system("xclip -o -selection clipboard"))<CR>p

augroup filetype
	au! BufRead,BufNewFile *.ll set filetype=llvm
	au! BufRead,BufNewFile *.td set filetype=tablegen
	au! BufRead,BufNewFile *.jl set filetype=julia
augroup END
