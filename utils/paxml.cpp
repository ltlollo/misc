// gpp paxml

#include <vector>
#include <string>
#include <iostream>
#include <fstream>
#include <algorithm>

struct Escape { std::string esc; wchar_t t; };

Escape escapes[] = {
    { "Aacute;"                         , L'\x000C1'},
    { "Aacute"                          , L'\x000C1'},
    { "aacute;"                         , L'\x000E1'},
    { "aacute"                          , L'\x000E1'},
    { "Abreve;"                         , L'\x00102'},
    { "abreve;"                         , L'\x00103'},
    { "ac;"                             , L'\x0223E'},
    { "acd;"                            , L'\x0223F'},
    { "acE;"                            , L'\x0223E'},
    { "Acirc;"                          , L'\x000C2'},
    { "Acirc"                           , L'\x000C2'},
    { "acirc;"                          , L'\x000E2'},
    { "acirc"                           , L'\x000E2'},
    { "acute;"                          , L'\x000B4'},
    { "acute"                           , L'\x000B4'},
    { "Acy;"                            , L'\x00410'},
    { "acy;"                            , L'\x00430'},
    { "AElig;"                          , L'\x000C6'},
    { "AElig"                           , L'\x000C6'},
    { "aelig;"                          , L'\x000E6'},
    { "aelig"                           , L'\x000E6'},
    { "af;"                             , L'\x02061'},
    { "Afr;"                            , L'\x1D504'},
    { "afr;"                            , L'\x1D51E'},
    { "Agrave;"                         , L'\x000C0'},
    { "Agrave"                          , L'\x000C0'},
    { "agrave;"                         , L'\x000E0'},
    { "agrave"                          , L'\x000E0'},
    { "alefsym;"                        , L'\x02135'},
    { "aleph;"                          , L'\x02135'},
    { "Alpha;"                          , L'\x00391'},
    { "alpha;"                          , L'\x003B1'},
    { "Amacr;"                          , L'\x00100'},
    { "amacr;"                          , L'\x00101'},
    { "amalg;"                          , L'\x02A3F'},
    { "AMP;"                            , L'\x00026'},
    { "AMP"                             , L'\x00026'},
    { "amp;"                            , L'\x00026'},
    { "amp"                             , L'\x00026'},
    { "And;"                            , L'\x02A53'},
    { "and;"                            , L'\x02227'},
    { "andand;"                         , L'\x02A55'},
    { "andd;"                           , L'\x02A5C'},
    { "andslope;"                       , L'\x02A58'},
    { "andv;"                           , L'\x02A5A'},
    { "ang;"                            , L'\x02220'},
    { "ange;"                           , L'\x029A4'},
    { "angle;"                          , L'\x02220'},
    { "angmsd;"                         , L'\x02221'},
    { "angmsdaa;"                       , L'\x029A8'},
    { "angmsdab;"                       , L'\x029A9'},
    { "angmsdac;"                       , L'\x029AA'},
    { "angmsdad;"                       , L'\x029AB'},
    { "angmsdae;"                       , L'\x029AC'},
    { "angmsdaf;"                       , L'\x029AD'},
    { "angmsdag;"                       , L'\x029AE'},
    { "angmsdah;"                       , L'\x029AF'},
    { "angrt;"                          , L'\x0221F'},
    { "angrtvb;"                        , L'\x022BE'},
    { "angrtvbd;"                       , L'\x0299D'},
    { "angsph;"                         , L'\x02222'},
    { "angst;"                          , L'\x000C5'},
    { "angzarr;"                        , L'\x0237C'},
    { "Aogon;"                          , L'\x00104'},
    { "aogon;"                          , L'\x00105'},
    { "Aopf;"                           , L'\x1D538'},
    { "aopf;"                           , L'\x1D552'},
    { "ap;"                             , L'\x02248'},
    { "apacir;"                         , L'\x02A6F'},
    { "apE;"                            , L'\x02A70'},
    { "ape;"                            , L'\x0224A'},
    { "apid;"                           , L'\x0224B'},
    { "apos;"                           , L'\x00027'},
    { "ApplyFunction;"                  , L'\x02061'},
    { "approx;"                         , L'\x02248'},
    { "approxeq;"                       , L'\x0224A'},
    { "Aring;"                          , L'\x000C5'},
    { "Aring"                           , L'\x000C5'},
    { "aring;"                          , L'\x000E5'},
    { "aring"                           , L'\x000E5'},
    { "Ascr;"                           , L'\x1D49C'},
    { "ascr;"                           , L'\x1D4B6'},
    { "Assign;"                         , L'\x02254'},
    { "ast;"                            , L'\x0002A'},
    { "asymp;"                          , L'\x02248'},
    { "asympeq;"                        , L'\x0224D'},
    { "Atilde;"                         , L'\x000C3'},
    { "Atilde"                          , L'\x000C3'},
    { "atilde;"                         , L'\x000E3'},
    { "atilde"                          , L'\x000E3'},
    { "Auml;"                           , L'\x000C4'},
    { "Auml"                            , L'\x000C4'},
    { "auml;"                           , L'\x000E4'},
    { "auml"                            , L'\x000E4'},
    { "awconint;"                       , L'\x02233'},
    { "awint;"                          , L'\x02A11'},
    { "backcong;"                       , L'\x0224C'},
    { "backepsilon;"                    , L'\x003F6'},
    { "backprime;"                      , L'\x02035'},
    { "backsim;"                        , L'\x0223D'},
    { "backsimeq;"                      , L'\x022CD'},
    { "Backslash;"                      , L'\x02216'},
    { "Barv;"                           , L'\x02AE7'},
    { "barvee;"                         , L'\x022BD'},
    { "Barwed;"                         , L'\x02306'},
    { "barwed;"                         , L'\x02305'},
    { "barwedge;"                       , L'\x02305'},
    { "bbrk;"                           , L'\x023B5'},
    { "bbrktbrk;"                       , L'\x023B6'},
    { "bcong;"                          , L'\x0224C'},
    { "Bcy;"                            , L'\x00411'},
    { "bcy;"                            , L'\x00431'},
    { "bdquo;"                          , L'\x0201E'},
    { "becaus;"                         , L'\x02235'},
    { "Because;"                        , L'\x02235'},
    { "because;"                        , L'\x02235'},
    { "bemptyv;"                        , L'\x029B0'},
    { "bepsi;"                          , L'\x003F6'},
    { "bernou;"                         , L'\x0212C'},
    { "Bernoullis;"                     , L'\x0212C'},
    { "Beta;"                           , L'\x00392'},
    { "beta;"                           , L'\x003B2'},
    { "beth;"                           , L'\x02136'},
    { "between;"                        , L'\x0226C'},
    { "Bfr;"                            , L'\x1D505'},
    { "bfr;"                            , L'\x1D51F'},
    { "bigcap;"                         , L'\x022C2'},
    { "bigcirc;"                        , L'\x025EF'},
    { "bigcup;"                         , L'\x022C3'},
    { "bigodot;"                        , L'\x02A00'},
    { "bigoplus;"                       , L'\x02A01'},
    { "bigotimes;"                      , L'\x02A02'},
    { "bigsqcup;"                       , L'\x02A06'},
    { "bigstar;"                        , L'\x02605'},
    { "bigtriangledown;"                , L'\x025BD'},
    { "bigtriangleup;"                  , L'\x025B3'},
    { "biguplus;"                       , L'\x02A04'},
    { "bigvee;"                         , L'\x022C1'},
    { "bigwedge;"                       , L'\x022C0'},
    { "bkarow;"                         , L'\x0290D'},
    { "blacklozenge;"                   , L'\x029EB'},
    { "blacksquare;"                    , L'\x025AA'},
    { "blacktriangle;"                  , L'\x025B4'},
    { "blacktriangledown;"              , L'\x025BE'},
    { "blacktriangleleft;"              , L'\x025C2'},
    { "blacktriangleright;"             , L'\x025B8'},
    { "blank;"                          , L'\x02423'},
    { "blk12;"                          , L'\x02592'},
    { "blk14;"                          , L'\x02591'},
    { "blk34;"                          , L'\x02593'},
    { "block;"                          , L'\x02588'},
    { "bne;"                            , L'\x0003D'},
    { "bnequiv;"                        , L'\x02261'},
    { "bNot;"                           , L'\x02AED'},
    { "bnot;"                           , L'\x02310'},
    { "Bopf;"                           , L'\x1D539'},
    { "bopf;"                           , L'\x1D553'},
    { "bot;"                            , L'\x022A5'},
    { "bottom;"                         , L'\x022A5'},
    { "bowtie;"                         , L'\x022C8'},
    { "boxbox;"                         , L'\x029C9'},
    { "boxDL;"                          , L'\x02557'},
    { "boxDl;"                          , L'\x02556'},
    { "boxdL;"                          , L'\x02555'},
    { "boxdl;"                          , L'\x02510'},
    { "boxDR;"                          , L'\x02554'},
    { "boxDr;"                          , L'\x02553'},
    { "boxdR;"                          , L'\x02552'},
    { "boxdr;"                          , L'\x0250C'},
    { "boxH;"                           , L'\x02550'},
    { "boxh;"                           , L'\x02500'},
    { "boxHD;"                          , L'\x02566'},
    { "boxHd;"                          , L'\x02564'},
    { "boxhD;"                          , L'\x02565'},
    { "boxhd;"                          , L'\x0252C'},
    { "boxHU;"                          , L'\x02569'},
    { "boxHu;"                          , L'\x02567'},
    { "boxhU;"                          , L'\x02568'},
    { "boxhu;"                          , L'\x02534'},
    { "boxminus;"                       , L'\x0229F'},
    { "boxplus;"                        , L'\x0229E'},
    { "boxtimes;"                       , L'\x022A0'},
    { "boxUL;"                          , L'\x0255D'},
    { "boxUl;"                          , L'\x0255C'},
    { "boxuL;"                          , L'\x0255B'},
    { "boxul;"                          , L'\x02518'},
    { "boxUR;"                          , L'\x0255A'},
    { "boxUr;"                          , L'\x02559'},
    { "boxuR;"                          , L'\x02558'},
    { "boxur;"                          , L'\x02514'},
    { "boxV;"                           , L'\x02551'},
    { "boxv;"                           , L'\x02502'},
    { "boxVH;"                          , L'\x0256C'},
    { "boxVh;"                          , L'\x0256B'},
    { "boxvH;"                          , L'\x0256A'},
    { "boxvh;"                          , L'\x0253C'},
    { "boxVL;"                          , L'\x02563'},
    { "boxVl;"                          , L'\x02562'},
    { "boxvL;"                          , L'\x02561'},
    { "boxvl;"                          , L'\x02524'},
    { "boxVR;"                          , L'\x02560'},
    { "boxVr;"                          , L'\x0255F'},
    { "boxvR;"                          , L'\x0255E'},
    { "boxvr;"                          , L'\x0251C'},
    { "bprime;"                         , L'\x02035'},
    { "Breve;"                          , L'\x002D8'},
    { "breve;"                          , L'\x002D8'},
    { "brvbar;"                         , L'\x000A6'},
    { "brvbar"                          , L'\x000A6'},
    { "Bscr;"                           , L'\x0212C'},
    { "bscr;"                           , L'\x1D4B7'},
    { "bsemi;"                          , L'\x0204F'},
    { "bsim;"                           , L'\x0223D'},
    { "bsime;"                          , L'\x022CD'},
    { "bsol;"                           , L'\x0005C'},
    { "bsolb;"                          , L'\x029C5'},
    { "bsolhsub;"                       , L'\x027C8'},
    { "bull;"                           , L'\x02022'},
    { "bullet;"                         , L'\x02022'},
    { "bump;"                           , L'\x0224E'},
    { "bumpE;"                          , L'\x02AAE'},
    { "bumpe;"                          , L'\x0224F'},
    { "Bumpeq;"                         , L'\x0224E'},
    { "bumpeq;"                         , L'\x0224F'},
    { "Cacute;"                         , L'\x00106'},
    { "cacute;"                         , L'\x00107'},
    { "Cap;"                            , L'\x022D2'},
    { "cap;"                            , L'\x02229'},
    { "capand;"                         , L'\x02A44'},
    { "capbrcup;"                       , L'\x02A49'},
    { "capcap;"                         , L'\x02A4B'},
    { "capcup;"                         , L'\x02A47'},
    { "capdot;"                         , L'\x02A40'},
    { "CapitalDifferentialD;"           , L'\x02145'},
    { "caps;"                           , L'\x02229'},
    { "caret;"                          , L'\x02041'},
    { "caron;"                          , L'\x002C7'},
    { "Cayleys;"                        , L'\x0212D'},
    { "ccaps;"                          , L'\x02A4D'},
    { "Ccaron;"                         , L'\x0010C'},
    { "ccaron;"                         , L'\x0010D'},
    { "Ccedil;"                         , L'\x000C7'},
    { "Ccedil"                          , L'\x000C7'},
    { "ccedil;"                         , L'\x000E7'},
    { "ccedil"                          , L'\x000E7'},
    { "Ccirc;"                          , L'\x00108'},
    { "ccirc;"                          , L'\x00109'},
    { "Cconint;"                        , L'\x02230'},
    { "ccups;"                          , L'\x02A4C'},
    { "ccupssm;"                        , L'\x02A50'},
    { "Cdot;"                           , L'\x0010A'},
    { "cdot;"                           , L'\x0010B'},
    { "cedil;"                          , L'\x000B8'},
    { "cedil"                           , L'\x000B8'},
    { "Cedilla;"                        , L'\x000B8'},
    { "cemptyv;"                        , L'\x029B2'},
    { "cent;"                           , L'\x000A2'},
    { "cent"                            , L'\x000A2'},
    { "CenterDot;"                      , L'\x000B7'},
    { "centerdot;"                      , L'\x000B7'},
    { "Cfr;"                            , L'\x0212D'},
    { "cfr;"                            , L'\x1D520'},
    { "CHcy;"                           , L'\x00427'},
    { "chcy;"                           , L'\x00447'},
    { "check;"                          , L'\x02713'},
    { "checkmark;"                      , L'\x02713'},
    { "Chi;"                            , L'\x003A7'},
    { "chi;"                            , L'\x003C7'},
    { "cir;"                            , L'\x025CB'},
    { "circ;"                           , L'\x002C6'},
    { "circeq;"                         , L'\x02257'},
    { "circlearrowleft;"                , L'\x021BA'},
    { "circlearrowright;"               , L'\x021BB'},
    { "circledast;"                     , L'\x0229B'},
    { "circledcirc;"                    , L'\x0229A'},
    { "circleddash;"                    , L'\x0229D'},
    { "CircleDot;"                      , L'\x02299'},
    { "circledR;"                       , L'\x000AE'},
    { "circledS;"                       , L'\x024C8'},
    { "CircleMinus;"                    , L'\x02296'},
    { "CirclePlus;"                     , L'\x02295'},
    { "CircleTimes;"                    , L'\x02297'},
    { "cirE;"                           , L'\x029C3'},
    { "cire;"                           , L'\x02257'},
    { "cirfnint;"                       , L'\x02A10'},
    { "cirmid;"                         , L'\x02AEF'},
    { "cirscir;"                        , L'\x029C2'},
    { "ClockwiseContourIntegral;"       , L'\x02232'},
    { "CloseCurlyDoubleQuote;"          , L'\x0201D'},
    { "CloseCurlyQuote;"                , L'\x02019'},
    { "clubs;"                          , L'\x02663'},
    { "clubsuit;"                       , L'\x02663'},
    { "Colon;"                          , L'\x02237'},
    { "colon;"                          , L'\x0003A'},
    { "Colone;"                         , L'\x02A74'},
    { "colone;"                         , L'\x02254'},
    { "coloneq;"                        , L'\x02254'},
    { "comma;"                          , L'\x0002C'},
    { "commat;"                         , L'\x00040'},
    { "comp;"                           , L'\x02201'},
    { "compfn;"                         , L'\x02218'},
    { "complement;"                     , L'\x02201'},
    { "complexes;"                      , L'\x02102'},
    { "cong;"                           , L'\x02245'},
    { "congdot;"                        , L'\x02A6D'},
    { "Congruent;"                      , L'\x02261'},
    { "Conint;"                         , L'\x0222F'},
    { "conint;"                         , L'\x0222E'},
    { "ContourIntegral;"                , L'\x0222E'},
    { "Copf;"                           , L'\x02102'},
    { "copf;"                           , L'\x1D554'},
    { "coprod;"                         , L'\x02210'},
    { "Coproduct;"                      , L'\x02210'},
    { "COPY;"                           , L'\x000A9'},
    { "COPY"                            , L'\x000A9'},
    { "copy;"                           , L'\x000A9'},
    { "copy"                            , L'\x000A9'},
    { "copysr;"                         , L'\x02117'},
    { "CounterClockwiseContourIntegral;", L'\x02233'},
    { "crarr;"                          , L'\x021B5'},
    { "Cross;"                          , L'\x02A2F'},
    { "cross;"                          , L'\x02717'},
    { "Cscr;"                           , L'\x1D49E'},
    { "cscr;"                           , L'\x1D4B8'},
    { "csub;"                           , L'\x02ACF'},
    { "csube;"                          , L'\x02AD1'},
    { "csup;"                           , L'\x02AD0'},
    { "csupe;"                          , L'\x02AD2'},
    { "ctdot;"                          , L'\x022EF'},
    { "cudarrl;"                        , L'\x02938'},
    { "cudarrr;"                        , L'\x02935'},
    { "cuepr;"                          , L'\x022DE'},
    { "cuesc;"                          , L'\x022DF'},
    { "cularr;"                         , L'\x021B6'},
    { "cularrp;"                        , L'\x0293D'},
    { "Cup;"                            , L'\x022D3'},
    { "cup;"                            , L'\x0222A'},
    { "cupbrcap;"                       , L'\x02A48'},
    { "CupCap;"                         , L'\x0224D'},
    { "cupcap;"                         , L'\x02A46'},
    { "cupcup;"                         , L'\x02A4A'},
    { "cupdot;"                         , L'\x0228D'},
    { "cupor;"                          , L'\x02A45'},
    { "cups;"                           , L'\x0222A'},
    { "curarr;"                         , L'\x021B7'},
    { "curarrm;"                        , L'\x0293C'},
    { "curlyeqprec;"                    , L'\x022DE'},
    { "curlyeqsucc;"                    , L'\x022DF'},
    { "curlyvee;"                       , L'\x022CE'},
    { "curlywedge;"                     , L'\x022CF'},
    { "curren;"                         , L'\x000A4'},
    { "curren"                          , L'\x000A4'},
    { "curvearrowleft;"                 , L'\x021B6'},
    { "curvearrowright;"                , L'\x021B7'},
    { "cuvee;"                          , L'\x022CE'},
    { "cuwed;"                          , L'\x022CF'},
    { "cwconint;"                       , L'\x02232'},
    { "cwint;"                          , L'\x02231'},
    { "cylcty;"                         , L'\x0232D'},
    { "Dagger;"                         , L'\x02021'},
    { "dagger;"                         , L'\x02020'},
    { "daleth;"                         , L'\x02138'},
    { "Darr;"                           , L'\x021A1'},
    { "dArr;"                           , L'\x021D3'},
    { "darr;"                           , L'\x02193'},
    { "dash;"                           , L'\x02010'},
    { "Dashv;"                          , L'\x02AE4'},
    { "dashv;"                          , L'\x022A3'},
    { "dbkarow;"                        , L'\x0290F'},
    { "dblac;"                          , L'\x002DD'},
    { "Dcaron;"                         , L'\x0010E'},
    { "dcaron;"                         , L'\x0010F'},
    { "Dcy;"                            , L'\x00414'},
    { "dcy;"                            , L'\x00434'},
    { "DD;"                             , L'\x02145'},
    { "dd;"                             , L'\x02146'},
    { "ddagger;"                        , L'\x02021'},
    { "ddarr;"                          , L'\x021CA'},
    { "DDotrahd;"                       , L'\x02911'},
    { "ddotseq;"                        , L'\x02A77'},
    { "deg;"                            , L'\x000B0'},
    { "deg"                             , L'\x000B0'},
    { "Del;"                            , L'\x02207'},
    { "Delta;"                          , L'\x00394'},
    { "delta;"                          , L'\x003B4'},
    { "demptyv;"                        , L'\x029B1'},
    { "dfisht;"                         , L'\x0297F'},
    { "Dfr;"                            , L'\x1D507'},
    { "dfr;"                            , L'\x1D521'},
    { "dHar;"                           , L'\x02965'},
    { "dharl;"                          , L'\x021C3'},
    { "dharr;"                          , L'\x021C2'},
    { "DiacriticalAcute;"               , L'\x000B4'},
    { "DiacriticalDot;"                 , L'\x002D9'},
    { "DiacriticalDoubleAcute;"         , L'\x002DD'},
    { "DiacriticalGrave;"               , L'\x00060'},
    { "DiacriticalTilde;"               , L'\x002DC'},
    { "diam;"                           , L'\x022C4'},
    { "Diamond;"                        , L'\x022C4'},
    { "diamond;"                        , L'\x022C4'},
    { "diamondsuit;"                    , L'\x02666'},
    { "diams;"                          , L'\x02666'},
    { "die;"                            , L'\x000A8'},
    { "DifferentialD;"                  , L'\x02146'},
    { "digamma;"                        , L'\x003DD'},
    { "disin;"                          , L'\x022F2'},
    { "div;"                            , L'\x000F7'},
    { "divide;"                         , L'\x000F7'},
    { "divide"                          , L'\x000F7'},
    { "divideontimes;"                  , L'\x022C7'},
    { "divonx;"                         , L'\x022C7'},
    { "DJcy;"                           , L'\x00402'},
    { "djcy;"                           , L'\x00452'},
    { "dlcorn;"                         , L'\x0231E'},
    { "dlcrop;"                         , L'\x0230D'},
    { "dollar;"                         , L'\x00024'},
    { "Dopf;"                           , L'\x1D53B'},
    { "dopf;"                           , L'\x1D555'},
    { "Dot;"                            , L'\x000A8'},
    { "dot;"                            , L'\x002D9'},
    { "DotDot;"                         , L'\x020DC'},
    { "doteq;"                          , L'\x02250'},
    { "doteqdot;"                       , L'\x02251'},
    { "DotEqual;"                       , L'\x02250'},
    { "dotminus;"                       , L'\x02238'},
    { "dotplus;"                        , L'\x02214'},
    { "dotsquare;"                      , L'\x022A1'},
    { "doublebarwedge;"                 , L'\x02306'},
    { "DoubleContourIntegral;"          , L'\x0222F'},
    { "DoubleDot;"                      , L'\x000A8'},
    { "DoubleDownArrow;"                , L'\x021D3'},
    { "DoubleLeftArrow;"                , L'\x021D0'},
    { "DoubleLeftRightArrow;"           , L'\x021D4'},
    { "DoubleLeftTee;"                  , L'\x02AE4'},
    { "DoubleLongLeftArrow;"            , L'\x027F8'},
    { "DoubleLongLeftRightArrow;"       , L'\x027FA'},
    { "DoubleLongRightArrow;"           , L'\x027F9'},
    { "DoubleRightArrow;"               , L'\x021D2'},
    { "DoubleRightTee;"                 , L'\x022A8'},
    { "DoubleUpArrow;"                  , L'\x021D1'},
    { "DoubleUpDownArrow;"              , L'\x021D5'},
    { "DoubleVerticalBar;"              , L'\x02225'},
    { "DownArrow;"                      , L'\x02193'},
    { "Downarrow;"                      , L'\x021D3'},
    { "downarrow;"                      , L'\x02193'},
    { "DownArrowBar;"                   , L'\x02913'},
    { "DownArrowUpArrow;"               , L'\x021F5'},
    { "DownBreve;"                      , L'\x00311'},
    { "downdownarrows;"                 , L'\x021CA'},
    { "downharpoonleft;"                , L'\x021C3'},
    { "downharpoonright;"               , L'\x021C2'},
    { "DownLeftRightVector;"            , L'\x02950'},
    { "DownLeftTeeVector;"              , L'\x0295E'},
    { "DownLeftVector;"                 , L'\x021BD'},
    { "DownLeftVectorBar;"              , L'\x02956'},
    { "DownRightTeeVector;"             , L'\x0295F'},
    { "DownRightVector;"                , L'\x021C1'},
    { "DownRightVectorBar;"             , L'\x02957'},
    { "DownTee;"                        , L'\x022A4'},
    { "DownTeeArrow;"                   , L'\x021A7'},
    { "drbkarow;"                       , L'\x02910'},
    { "drcorn;"                         , L'\x0231F'},
    { "drcrop;"                         , L'\x0230C'},
    { "Dscr;"                           , L'\x1D49F'},
    { "dscr;"                           , L'\x1D4B9'},
    { "DScy;"                           , L'\x00405'},
    { "dscy;"                           , L'\x00455'},
    { "dsol;"                           , L'\x029F6'},
    { "Dstrok;"                         , L'\x00110'},
    { "dstrok;"                         , L'\x00111'},
    { "dtdot;"                          , L'\x022F1'},
    { "dtri;"                           , L'\x025BF'},
    { "dtrif;"                          , L'\x025BE'},
    { "duarr;"                          , L'\x021F5'},
    { "duhar;"                          , L'\x0296F'},
    { "dwangle;"                        , L'\x029A6'},
    { "DZcy;"                           , L'\x0040F'},
    { "dzcy;"                           , L'\x0045F'},
    { "dzigrarr;"                       , L'\x027FF'},
    { "Eacute;"                         , L'\x000C9'},
    { "Eacute"                          , L'\x000C9'},
    { "eacute;"                         , L'\x000E9'},
    { "eacute"                          , L'\x000E9'},
    { "easter;"                         , L'\x02A6E'},
    { "Ecaron;"                         , L'\x0011A'},
    { "ecaron;"                         , L'\x0011B'},
    { "ecir;"                           , L'\x02256'},
    { "Ecirc;"                          , L'\x000CA'},
    { "Ecirc"                           , L'\x000CA'},
    { "ecirc;"                          , L'\x000EA'},
    { "ecirc"                           , L'\x000EA'},
    { "ecolon;"                         , L'\x02255'},
    { "Ecy;"                            , L'\x0042D'},
    { "ecy;"                            , L'\x0044D'},
    { "eDDot;"                          , L'\x02A77'},
    { "Edot;"                           , L'\x00116'},
    { "eDot;"                           , L'\x02251'},
    { "edot;"                           , L'\x00117'},
    { "ee;"                             , L'\x02147'},
    { "efDot;"                          , L'\x02252'},
    { "Efr;"                            , L'\x1D508'},
    { "efr;"                            , L'\x1D522'},
    { "eg;"                             , L'\x02A9A'},
    { "Egrave;"                         , L'\x000C8'},
    { "Egrave"                          , L'\x000C8'},
    { "egrave;"                         , L'\x000E8'},
    { "egrave"                          , L'\x000E8'},
    { "egs;"                            , L'\x02A96'},
    { "egsdot;"                         , L'\x02A98'},
    { "el;"                             , L'\x02A99'},
    { "Element;"                        , L'\x02208'},
    { "elinters;"                       , L'\x023E7'},
    { "ell;"                            , L'\x02113'},
    { "els;"                            , L'\x02A95'},
    { "elsdot;"                         , L'\x02A97'},
    { "Emacr;"                          , L'\x00112'},
    { "emacr;"                          , L'\x00113'},
    { "empty;"                          , L'\x02205'},
    { "emptyset;"                       , L'\x02205'},
    { "EmptySmallSquare;"               , L'\x025FB'},
    { "emptyv;"                         , L'\x02205'},
    { "EmptyVerySmallSquare;"           , L'\x025AB'},
    { "emsp;"                           , L'\x02003'},
    { "emsp13;"                         , L'\x02004'},
    { "emsp14;"                         , L'\x02005'},
    { "ENG;"                            , L'\x0014A'},
    { "eng;"                            , L'\x0014B'},
    { "ensp;"                           , L'\x02002'},
    { "Eogon;"                          , L'\x00118'},
    { "eogon;"                          , L'\x00119'},
    { "Eopf;"                           , L'\x1D53C'},
    { "eopf;"                           , L'\x1D556'},
    { "epar;"                           , L'\x022D5'},
    { "eparsl;"                         , L'\x029E3'},
    { "eplus;"                          , L'\x02A71'},
    { "epsi;"                           , L'\x003B5'},
    { "Epsilon;"                        , L'\x00395'},
    { "epsilon;"                        , L'\x003B5'},
    { "epsiv;"                          , L'\x003F5'},
    { "eqcirc;"                         , L'\x02256'},
    { "eqcolon;"                        , L'\x02255'},
    { "eqsim;"                          , L'\x02242'},
    { "eqslantgtr;"                     , L'\x02A96'},
    { "eqslantless;"                    , L'\x02A95'},
    { "Equal;"                          , L'\x02A75'},
    { "equals;"                         , L'\x0003D'},
    { "EqualTilde;"                     , L'\x02242'},
    { "equest;"                         , L'\x0225F'},
    { "Equilibrium;"                    , L'\x021CC'},
    { "equiv;"                          , L'\x02261'},
    { "equivDD;"                        , L'\x02A78'},
    { "eqvparsl;"                       , L'\x029E5'},
    { "erarr;"                          , L'\x02971'},
    { "erDot;"                          , L'\x02253'},
    { "Escr;"                           , L'\x02130'},
    { "escr;"                           , L'\x0212F'},
    { "esdot;"                          , L'\x02250'},
    { "Esim;"                           , L'\x02A73'},
    { "esim;"                           , L'\x02242'},
    { "Eta;"                            , L'\x00397'},
    { "eta;"                            , L'\x003B7'},
    { "ETH;"                            , L'\x000D0'},
    { "ETH"                             , L'\x000D0'},
    { "eth;"                            , L'\x000F0'},
    { "eth"                             , L'\x000F0'},
    { "Euml;"                           , L'\x000CB'},
    { "Euml"                            , L'\x000CB'},
    { "euml;"                           , L'\x000EB'},
    { "euml"                            , L'\x000EB'},
    { "euro;"                           , L'\x020AC'},
    { "excl;"                           , L'\x00021'},
    { "exist;"                          , L'\x02203'},
    { "Exists;"                         , L'\x02203'},
    { "expectation;"                    , L'\x02130'},
    { "ExponentialE;"                   , L'\x02147'},
    { "exponentiale;"                   , L'\x02147'},
    { "fallingdotseq;"                  , L'\x02252'},
    { "Fcy;"                            , L'\x00424'},
    { "fcy;"                            , L'\x00444'},
    { "female;"                         , L'\x02640'},
    { "ffilig;"                         , L'\x0FB03'},
    { "fflig;"                          , L'\x0FB00'},
    { "ffllig;"                         , L'\x0FB04'},
    { "Ffr;"                            , L'\x1D509'},
    { "ffr;"                            , L'\x1D523'},
    { "filig;"                          , L'\x0FB01'},
    { "FilledSmallSquare;"              , L'\x025FC'},
    { "FilledVerySmallSquare;"          , L'\x025AA'},
    { "fjlig;"                          , L'\x00066'},
    { "flat;"                           , L'\x0266D'},
    { "fllig;"                          , L'\x0FB02'},
    { "fltns;"                          , L'\x025B1'},
    { "fnof;"                           , L'\x00192'},
    { "Fopf;"                           , L'\x1D53D'},
    { "fopf;"                           , L'\x1D557'},
    { "ForAll;"                         , L'\x02200'},
    { "forall;"                         , L'\x02200'},
    { "fork;"                           , L'\x022D4'},
    { "forkv;"                          , L'\x02AD9'},
    { "Fouriertrf;"                     , L'\x02131'},
    { "fpartint;"                       , L'\x02A0D'},
    { "frac12;"                         , L'\x000BD'},
    { "frac12"                          , L'\x000BD'},
    { "frac13;"                         , L'\x02153'},
    { "frac14;"                         , L'\x000BC'},
    { "frac14"                          , L'\x000BC'},
    { "frac15;"                         , L'\x02155'},
    { "frac16;"                         , L'\x02159'},
    { "frac18;"                         , L'\x0215B'},
    { "frac23;"                         , L'\x02154'},
    { "frac25;"                         , L'\x02156'},
    { "frac34;"                         , L'\x000BE'},
    { "frac34"                          , L'\x000BE'},
    { "frac35;"                         , L'\x02157'},
    { "frac38;"                         , L'\x0215C'},
    { "frac45;"                         , L'\x02158'},
    { "frac56;"                         , L'\x0215A'},
    { "frac58;"                         , L'\x0215D'},
    { "frac78;"                         , L'\x0215E'},
    { "frasl;"                          , L'\x02044'},
    { "frown;"                          , L'\x02322'},
    { "Fscr;"                           , L'\x02131'},
    { "fscr;"                           , L'\x1D4BB'},
    { "gacute;"                         , L'\x001F5'},
    { "Gamma;"                          , L'\x00393'},
    { "gamma;"                          , L'\x003B3'},
    { "Gammad;"                         , L'\x003DC'},
    { "gammad;"                         , L'\x003DD'},
    { "gap;"                            , L'\x02A86'},
    { "Gbreve;"                         , L'\x0011E'},
    { "gbreve;"                         , L'\x0011F'},
    { "Gcedil;"                         , L'\x00122'},
    { "Gcirc;"                          , L'\x0011C'},
    { "gcirc;"                          , L'\x0011D'},
    { "Gcy;"                            , L'\x00413'},
    { "gcy;"                            , L'\x00433'},
    { "Gdot;"                           , L'\x00120'},
    { "gdot;"                           , L'\x00121'},
    { "gE;"                             , L'\x02267'},
    { "ge;"                             , L'\x02265'},
    { "gEl;"                            , L'\x02A8C'},
    { "gel;"                            , L'\x022DB'},
    { "geq;"                            , L'\x02265'},
    { "geqq;"                           , L'\x02267'},
    { "geqslant;"                       , L'\x02A7E'},
    { "ges;"                            , L'\x02A7E'},
    { "gescc;"                          , L'\x02AA9'},
    { "gesdot;"                         , L'\x02A80'},
    { "gesdoto;"                        , L'\x02A82'},
    { "gesdotol;"                       , L'\x02A84'},
    { "gesl;"                           , L'\x022DB'},
    { "gesles;"                         , L'\x02A94'},
    { "Gfr;"                            , L'\x1D50A'},
    { "gfr;"                            , L'\x1D524'},
    { "Gg;"                             , L'\x022D9'},
    { "gg;"                             , L'\x0226B'},
    { "ggg;"                            , L'\x022D9'},
    { "gimel;"                          , L'\x02137'},
    { "GJcy;"                           , L'\x00403'},
    { "gjcy;"                           , L'\x00453'},
    { "gl;"                             , L'\x02277'},
    { "gla;"                            , L'\x02AA5'},
    { "glE;"                            , L'\x02A92'},
    { "glj;"                            , L'\x02AA4'},
    { "gnap;"                           , L'\x02A8A'},
    { "gnapprox;"                       , L'\x02A8A'},
    { "gnE;"                            , L'\x02269'},
    { "gne;"                            , L'\x02A88'},
    { "gneq;"                           , L'\x02A88'},
    { "gneqq;"                          , L'\x02269'},
    { "gnsim;"                          , L'\x022E7'},
    { "Gopf;"                           , L'\x1D53E'},
    { "gopf;"                           , L'\x1D558'},
    { "grave;"                          , L'\x00060'},
    { "GreaterEqual;"                   , L'\x02265'},
    { "GreaterEqualLess;"               , L'\x022DB'},
    { "GreaterFullEqual;"               , L'\x02267'},
    { "GreaterGreater;"                 , L'\x02AA2'},
    { "GreaterLess;"                    , L'\x02277'},
    { "GreaterSlantEqual;"              , L'\x02A7E'},
    { "GreaterTilde;"                   , L'\x02273'},
    { "Gscr;"                           , L'\x1D4A2'},
    { "gscr;"                           , L'\x0210A'},
    { "gsim;"                           , L'\x02273'},
    { "gsime;"                          , L'\x02A8E'},
    { "gsiml;"                          , L'\x02A90'},
    { "GT;"                             , L'\x0003E'},
    { "GT"                              , L'\x0003E'},
    { "Gt;"                             , L'\x0226B'},
    { "gt;"                             , L'\x0003E'},
    { "gt"                              , L'\x0003E'},
    { "gtcc;"                           , L'\x02AA7'},
    { "gtcir;"                          , L'\x02A7A'},
    { "gtdot;"                          , L'\x022D7'},
    { "gtlPar;"                         , L'\x02995'},
    { "gtquest;"                        , L'\x02A7C'},
    { "gtrapprox;"                      , L'\x02A86'},
    { "gtrarr;"                         , L'\x02978'},
    { "gtrdot;"                         , L'\x022D7'},
    { "gtreqless;"                      , L'\x022DB'},
    { "gtreqqless;"                     , L'\x02A8C'},
    { "gtrless;"                        , L'\x02277'},
    { "gtrsim;"                         , L'\x02273'},
    { "gvertneqq;"                      , L'\x02269'},
    { "gvnE;"                           , L'\x02269'},
    { "Hacek;"                          , L'\x002C7'},
    { "hairsp;"                         , L'\x0200A'},
    { "half;"                           , L'\x000BD'},
    { "hamilt;"                         , L'\x0210B'},
    { "HARDcy;"                         , L'\x0042A'},
    { "hardcy;"                         , L'\x0044A'},
    { "hArr;"                           , L'\x021D4'},
    { "harr;"                           , L'\x02194'},
    { "harrcir;"                        , L'\x02948'},
    { "harrw;"                          , L'\x021AD'},
    { "Hat;"                            , L'\x0005E'},
    { "hbar;"                           , L'\x0210F'},
    { "Hcirc;"                          , L'\x00124'},
    { "hcirc;"                          , L'\x00125'},
    { "hearts;"                         , L'\x02665'},
    { "heartsuit;"                      , L'\x02665'},
    { "hellip;"                         , L'\x02026'},
    { "hercon;"                         , L'\x022B9'},
    { "Hfr;"                            , L'\x0210C'},
    { "hfr;"                            , L'\x1D525'},
    { "HilbertSpace;"                   , L'\x0210B'},
    { "hksearow;"                       , L'\x02925'},
    { "hkswarow;"                       , L'\x02926'},
    { "hoarr;"                          , L'\x021FF'},
    { "homtht;"                         , L'\x0223B'},
    { "hookleftarrow;"                  , L'\x021A9'},
    { "hookrightarrow;"                 , L'\x021AA'},
    { "Hopf;"                           , L'\x0210D'},
    { "hopf;"                           , L'\x1D559'},
    { "horbar;"                         , L'\x02015'},
    { "HorizontalLine;"                 , L'\x02500'},
    { "Hscr;"                           , L'\x0210B'},
    { "hscr;"                           , L'\x1D4BD'},
    { "hslash;"                         , L'\x0210F'},
    { "Hstrok;"                         , L'\x00126'},
    { "hstrok;"                         , L'\x00127'},
    { "HumpDownHump;"                   , L'\x0224E'},
    { "HumpEqual;"                      , L'\x0224F'},
    { "hybull;"                         , L'\x02043'},
    { "hyphen;"                         , L'\x02010'},
    { "Iacute;"                         , L'\x000CD'},
    { "Iacute"                          , L'\x000CD'},
    { "iacute;"                         , L'\x000ED'},
    { "iacute"                          , L'\x000ED'},
    { "ic;"                             , L'\x02063'},
    { "Icirc;"                          , L'\x000CE'},
    { "Icirc"                           , L'\x000CE'},
    { "icirc;"                          , L'\x000EE'},
    { "icirc"                           , L'\x000EE'},
    { "Icy;"                            , L'\x00418'},
    { "icy;"                            , L'\x00438'},
    { "Idot;"                           , L'\x00130'},
    { "IEcy;"                           , L'\x00415'},
    { "iecy;"                           , L'\x00435'},
    { "iexcl;"                          , L'\x000A1'},
    { "iexcl"                           , L'\x000A1'},
    { "iff;"                            , L'\x021D4'},
    { "Ifr;"                            , L'\x02111'},
    { "ifr;"                            , L'\x1D526'},
    { "Igrave;"                         , L'\x000CC'},
    { "Igrave"                          , L'\x000CC'},
    { "igrave;"                         , L'\x000EC'},
    { "igrave"                          , L'\x000EC'},
    { "ii;"                             , L'\x02148'},
    { "iiiint;"                         , L'\x02A0C'},
    { "iiint;"                          , L'\x0222D'},
    { "iinfin;"                         , L'\x029DC'},
    { "iiota;"                          , L'\x02129'},
    { "IJlig;"                          , L'\x00132'},
    { "ijlig;"                          , L'\x00133'},
    { "Im;"                             , L'\x02111'},
    { "Imacr;"                          , L'\x0012A'},
    { "imacr;"                          , L'\x0012B'},
    { "image;"                          , L'\x02111'},
    { "ImaginaryI;"                     , L'\x02148'},
    { "imagline;"                       , L'\x02110'},
    { "imagpart;"                       , L'\x02111'},
    { "imath;"                          , L'\x00131'},
    { "imof;"                           , L'\x022B7'},
    { "imped;"                          , L'\x001B5'},
    { "Implies;"                        , L'\x021D2'},
    { "in;"                             , L'\x02208'},
    { "incare;"                         , L'\x02105'},
    { "infin;"                          , L'\x0221E'},
    { "infintie;"                       , L'\x029DD'},
    { "inodot;"                         , L'\x00131'},
    { "Int;"                            , L'\x0222C'},
    { "int;"                            , L'\x0222B'},
    { "intcal;"                         , L'\x022BA'},
    { "integers;"                       , L'\x02124'},
    { "Integral;"                       , L'\x0222B'},
    { "intercal;"                       , L'\x022BA'},
    { "Intersection;"                   , L'\x022C2'},
    { "intlarhk;"                       , L'\x02A17'},
    { "intprod;"                        , L'\x02A3C'},
    { "InvisibleComma;"                 , L'\x02063'},
    { "InvisibleTimes;"                 , L'\x02062'},
    { "IOcy;"                           , L'\x00401'},
    { "iocy;"                           , L'\x00451'},
    { "Iogon;"                          , L'\x0012E'},
    { "iogon;"                          , L'\x0012F'},
    { "Iopf;"                           , L'\x1D540'},
    { "iopf;"                           , L'\x1D55A'},
    { "Iota;"                           , L'\x00399'},
    { "iota;"                           , L'\x003B9'},
    { "iprod;"                          , L'\x02A3C'},
    { "iquest;"                         , L'\x000BF'},
    { "iquest"                          , L'\x000BF'},
    { "Iscr;"                           , L'\x02110'},
    { "iscr;"                           , L'\x1D4BE'},
    { "isin;"                           , L'\x02208'},
    { "isindot;"                        , L'\x022F5'},
    { "isinE;"                          , L'\x022F9'},
    { "isins;"                          , L'\x022F4'},
    { "isinsv;"                         , L'\x022F3'},
    { "isinv;"                          , L'\x02208'},
    { "it;"                             , L'\x02062'},
    { "Itilde;"                         , L'\x00128'},
    { "itilde;"                         , L'\x00129'},
    { "Iukcy;"                          , L'\x00406'},
    { "iukcy;"                          , L'\x00456'},
    { "Iuml;"                           , L'\x000CF'},
    { "Iuml"                            , L'\x000CF'},
    { "iuml;"                           , L'\x000EF'},
    { "iuml"                            , L'\x000EF'},
    { "Jcirc;"                          , L'\x00134'},
    { "jcirc;"                          , L'\x00135'},
    { "Jcy;"                            , L'\x00419'},
    { "jcy;"                            , L'\x00439'},
    { "Jfr;"                            , L'\x1D50D'},
    { "jfr;"                            , L'\x1D527'},
    { "jmath;"                          , L'\x00237'},
    { "Jopf;"                           , L'\x1D541'},
    { "jopf;"                           , L'\x1D55B'},
    { "Jscr;"                           , L'\x1D4A5'},
    { "jscr;"                           , L'\x1D4BF'},
    { "Jsercy;"                         , L'\x00408'},
    { "jsercy;"                         , L'\x00458'},
    { "Jukcy;"                          , L'\x00404'},
    { "jukcy;"                          , L'\x00454'},
    { "Kappa;"                          , L'\x0039A'},
    { "kappa;"                          , L'\x003BA'},
    { "kappav;"                         , L'\x003F0'},
    { "Kcedil;"                         , L'\x00136'},
    { "kcedil;"                         , L'\x00137'},
    { "Kcy;"                            , L'\x0041A'},
    { "kcy;"                            , L'\x0043A'},
    { "Kfr;"                            , L'\x1D50E'},
    { "kfr;"                            , L'\x1D528'},
    { "kgreen;"                         , L'\x00138'},
    { "KHcy;"                           , L'\x00425'},
    { "khcy;"                           , L'\x00445'},
    { "KJcy;"                           , L'\x0040C'},
    { "kjcy;"                           , L'\x0045C'},
    { "Kopf;"                           , L'\x1D542'},
    { "kopf;"                           , L'\x1D55C'},
    { "Kscr;"                           , L'\x1D4A6'},
    { "kscr;"                           , L'\x1D4C0'},
    { "lAarr;"                          , L'\x021DA'},
    { "Lacute;"                         , L'\x00139'},
    { "lacute;"                         , L'\x0013A'},
    { "laemptyv;"                       , L'\x029B4'},
    { "lagran;"                         , L'\x02112'},
    { "Lambda;"                         , L'\x0039B'},
    { "lambda;"                         , L'\x003BB'},
    { "Lang;"                           , L'\x027EA'},
    { "lang;"                           , L'\x027E8'},
    { "langd;"                          , L'\x02991'},
    { "langle;"                         , L'\x027E8'},
    { "lap;"                            , L'\x02A85'},
    { "Laplacetrf;"                     , L'\x02112'},
    { "laquo;"                          , L'\x000AB'},
    { "laquo"                           , L'\x000AB'},
    { "Larr;"                           , L'\x0219E'},
    { "lArr;"                           , L'\x021D0'},
    { "larr;"                           , L'\x02190'},
    { "larrb;"                          , L'\x021E4'},
    { "larrbfs;"                        , L'\x0291F'},
    { "larrfs;"                         , L'\x0291D'},
    { "larrhk;"                         , L'\x021A9'},
    { "larrlp;"                         , L'\x021AB'},
    { "larrpl;"                         , L'\x02939'},
    { "larrsim;"                        , L'\x02973'},
    { "larrtl;"                         , L'\x021A2'},
    { "lat;"                            , L'\x02AAB'},
    { "lAtail;"                         , L'\x0291B'},
    { "latail;"                         , L'\x02919'},
    { "late;"                           , L'\x02AAD'},
    { "lates;"                          , L'\x02AAD'},
    { "lBarr;"                          , L'\x0290E'},
    { "lbarr;"                          , L'\x0290C'},
    { "lbbrk;"                          , L'\x02772'},
    { "lbrace;"                         , L'\x0007B'},
    { "lbrack;"                         , L'\x0005B'},
    { "lbrke;"                          , L'\x0298B'},
    { "lbrksld;"                        , L'\x0298F'},
    { "lbrkslu;"                        , L'\x0298D'},
    { "Lcaron;"                         , L'\x0013D'},
    { "lcaron;"                         , L'\x0013E'},
    { "Lcedil;"                         , L'\x0013B'},
    { "lcedil;"                         , L'\x0013C'},
    { "lceil;"                          , L'\x02308'},
    { "lcub;"                           , L'\x0007B'},
    { "Lcy;"                            , L'\x0041B'},
    { "lcy;"                            , L'\x0043B'},
    { "ldca;"                           , L'\x02936'},
    { "ldquo;"                          , L'\x0201C'},
    { "ldquor;"                         , L'\x0201E'},
    { "ldrdhar;"                        , L'\x02967'},
    { "ldrushar;"                       , L'\x0294B'},
    { "ldsh;"                           , L'\x021B2'},
    { "lE;"                             , L'\x02266'},
    { "le;"                             , L'\x02264'},
    { "LeftAngleBracket;"               , L'\x027E8'},
    { "LeftArrow;"                      , L'\x02190'},
    { "Leftarrow;"                      , L'\x021D0'},
    { "leftarrow;"                      , L'\x02190'},
    { "LeftArrowBar;"                   , L'\x021E4'},
    { "LeftArrowRightArrow;"            , L'\x021C6'},
    { "leftarrowtail;"                  , L'\x021A2'},
    { "LeftCeiling;"                    , L'\x02308'},
    { "LeftDoubleBracket;"              , L'\x027E6'},
    { "LeftDownTeeVector;"              , L'\x02961'},
    { "LeftDownVector;"                 , L'\x021C3'},
    { "LeftDownVectorBar;"              , L'\x02959'},
    { "LeftFloor;"                      , L'\x0230A'},
    { "leftharpoondown;"                , L'\x021BD'},
    { "leftharpoonup;"                  , L'\x021BC'},
    { "leftleftarrows;"                 , L'\x021C7'},
    { "LeftRightArrow;"                 , L'\x02194'},
    { "Leftrightarrow;"                 , L'\x021D4'},
    { "leftrightarrow;"                 , L'\x02194'},
    { "leftrightarrows;"                , L'\x021C6'},
    { "leftrightharpoons;"              , L'\x021CB'},
    { "leftrightsquigarrow;"            , L'\x021AD'},
    { "LeftRightVector;"                , L'\x0294E'},
    { "LeftTee;"                        , L'\x022A3'},
    { "LeftTeeArrow;"                   , L'\x021A4'},
    { "LeftTeeVector;"                  , L'\x0295A'},
    { "leftthreetimes;"                 , L'\x022CB'},
    { "LeftTriangle;"                   , L'\x022B2'},
    { "LeftTriangleBar;"                , L'\x029CF'},
    { "LeftTriangleEqual;"              , L'\x022B4'},
    { "LeftUpDownVector;"               , L'\x02951'},
    { "LeftUpTeeVector;"                , L'\x02960'},
    { "LeftUpVector;"                   , L'\x021BF'},
    { "LeftUpVectorBar;"                , L'\x02958'},
    { "LeftVector;"                     , L'\x021BC'},
    { "LeftVectorBar;"                  , L'\x02952'},
    { "lEg;"                            , L'\x02A8B'},
    { "leg;"                            , L'\x022DA'},
    { "leq;"                            , L'\x02264'},
    { "leqq;"                           , L'\x02266'},
    { "leqslant;"                       , L'\x02A7D'},
    { "les;"                            , L'\x02A7D'},
    { "lescc;"                          , L'\x02AA8'},
    { "lesdot;"                         , L'\x02A7F'},
    { "lesdoto;"                        , L'\x02A81'},
    { "lesdotor;"                       , L'\x02A83'},
    { "lesg;"                           , L'\x022DA'},
    { "lesges;"                         , L'\x02A93'},
    { "lessapprox;"                     , L'\x02A85'},
    { "lessdot;"                        , L'\x022D6'},
    { "lesseqgtr;"                      , L'\x022DA'},
    { "lesseqqgtr;"                     , L'\x02A8B'},
    { "LessEqualGreater;"               , L'\x022DA'},
    { "LessFullEqual;"                  , L'\x02266'},
    { "LessGreater;"                    , L'\x02276'},
    { "lessgtr;"                        , L'\x02276'},
    { "LessLess;"                       , L'\x02AA1'},
    { "lesssim;"                        , L'\x02272'},
    { "LessSlantEqual;"                 , L'\x02A7D'},
    { "LessTilde;"                      , L'\x02272'},
    { "lfisht;"                         , L'\x0297C'},
    { "lfloor;"                         , L'\x0230A'},
    { "Lfr;"                            , L'\x1D50F'},
    { "lfr;"                            , L'\x1D529'},
    { "lg;"                             , L'\x02276'},
    { "lgE;"                            , L'\x02A91'},
    { "lHar;"                           , L'\x02962'},
    { "lhard;"                          , L'\x021BD'},
    { "lharu;"                          , L'\x021BC'},
    { "lharul;"                         , L'\x0296A'},
    { "lhblk;"                          , L'\x02584'},
    { "LJcy;"                           , L'\x00409'},
    { "ljcy;"                           , L'\x00459'},
    { "Ll;"                             , L'\x022D8'},
    { "ll;"                             , L'\x0226A'},
    { "llarr;"                          , L'\x021C7'},
    { "llcorner;"                       , L'\x0231E'},
    { "Lleftarrow;"                     , L'\x021DA'},
    { "llhard;"                         , L'\x0296B'},
    { "lltri;"                          , L'\x025FA'},
    { "Lmidot;"                         , L'\x0013F'},
    { "lmidot;"                         , L'\x00140'},
    { "lmoust;"                         , L'\x023B0'},
    { "lmoustache;"                     , L'\x023B0'},
    { "lnap;"                           , L'\x02A89'},
    { "lnapprox;"                       , L'\x02A89'},
    { "lnE;"                            , L'\x02268'},
    { "lne;"                            , L'\x02A87'},
    { "lneq;"                           , L'\x02A87'},
    { "lneqq;"                          , L'\x02268'},
    { "lnsim;"                          , L'\x022E6'},
    { "loang;"                          , L'\x027EC'},
    { "loarr;"                          , L'\x021FD'},
    { "lobrk;"                          , L'\x027E6'},
    { "LongLeftArrow;"                  , L'\x027F5'},
    { "Longleftarrow;"                  , L'\x027F8'},
    { "longleftarrow;"                  , L'\x027F5'},
    { "LongLeftRightArrow;"             , L'\x027F7'},
    { "Longleftrightarrow;"             , L'\x027FA'},
    { "longleftrightarrow;"             , L'\x027F7'},
    { "longmapsto;"                     , L'\x027FC'},
    { "LongRightArrow;"                 , L'\x027F6'},
    { "Longrightarrow;"                 , L'\x027F9'},
    { "longrightarrow;"                 , L'\x027F6'},
    { "looparrowleft;"                  , L'\x021AB'},
    { "looparrowright;"                 , L'\x021AC'},
    { "lopar;"                          , L'\x02985'},
    { "Lopf;"                           , L'\x1D543'},
    { "lopf;"                           , L'\x1D55D'},
    { "loplus;"                         , L'\x02A2D'},
    { "lotimes;"                        , L'\x02A34'},
    { "lowast;"                         , L'\x02217'},
    { "lowbar;"                         , L'\x0005F'},
    { "LowerLeftArrow;"                 , L'\x02199'},
    { "LowerRightArrow;"                , L'\x02198'},
    { "loz;"                            , L'\x025CA'},
    { "lozenge;"                        , L'\x025CA'},
    { "lozf;"                           , L'\x029EB'},
    { "lpar;"                           , L'\x00028'},
    { "lparlt;"                         , L'\x02993'},
    { "lrarr;"                          , L'\x021C6'},
    { "lrcorner;"                       , L'\x0231F'},
    { "lrhar;"                          , L'\x021CB'},
    { "lrhard;"                         , L'\x0296D'},
    { "lrm;"                            , L'\x0200E'},
    { "lrtri;"                          , L'\x022BF'},
    { "lsaquo;"                         , L'\x02039'},
    { "Lscr;"                           , L'\x02112'},
    { "lscr;"                           , L'\x1D4C1'},
    { "Lsh;"                            , L'\x021B0'},
    { "lsh;"                            , L'\x021B0'},
    { "lsim;"                           , L'\x02272'},
    { "lsime;"                          , L'\x02A8D'},
    { "lsimg;"                          , L'\x02A8F'},
    { "lsqb;"                           , L'\x0005B'},
    { "lsquo;"                          , L'\x02018'},
    { "lsquor;"                         , L'\x0201A'},
    { "Lstrok;"                         , L'\x00141'},
    { "lstrok;"                         , L'\x00142'},
    { "LT;"                             , L'\x0003C'},
    { "LT"                              , L'\x0003C'},
    { "Lt;"                             , L'\x0226A'},
    { "lt;"                             , L'\x0003C'},
    { "lt"                              , L'\x0003C'},
    { "ltcc;"                           , L'\x02AA6'},
    { "ltcir;"                          , L'\x02A79'},
    { "ltdot;"                          , L'\x022D6'},
    { "lthree;"                         , L'\x022CB'},
    { "ltimes;"                         , L'\x022C9'},
    { "ltlarr;"                         , L'\x02976'},
    { "ltquest;"                        , L'\x02A7B'},
    { "ltri;"                           , L'\x025C3'},
    { "ltrie;"                          , L'\x022B4'},
    { "ltrif;"                          , L'\x025C2'},
    { "ltrPar;"                         , L'\x02996'},
    { "lurdshar;"                       , L'\x0294A'},
    { "luruhar;"                        , L'\x02966'},
    { "lvertneqq;"                      , L'\x02268'},
    { "lvnE;"                           , L'\x02268'},
    { "macr;"                           , L'\x000AF'},
    { "macr"                            , L'\x000AF'},
    { "male;"                           , L'\x02642'},
    { "malt;"                           , L'\x02720'},
    { "maltese;"                        , L'\x02720'},
    { "Map;"                            , L'\x02905'},
    { "map;"                            , L'\x021A6'},
    { "mapsto;"                         , L'\x021A6'},
    { "mapstodown;"                     , L'\x021A7'},
    { "mapstoleft;"                     , L'\x021A4'},
    { "mapstoup;"                       , L'\x021A5'},
    { "marker;"                         , L'\x025AE'},
    { "mcomma;"                         , L'\x02A29'},
    { "Mcy;"                            , L'\x0041C'},
    { "mcy;"                            , L'\x0043C'},
    { "mdash;"                          , L'\x02014'},
    { "mDDot;"                          , L'\x0223A'},
    { "measuredangle;"                  , L'\x02221'},
    { "MediumSpace;"                    , L'\x0205F'},
    { "Mellintrf;"                      , L'\x02133'},
    { "Mfr;"                            , L'\x1D510'},
    { "mfr;"                            , L'\x1D52A'},
    { "mho;"                            , L'\x02127'},
    { "micro;"                          , L'\x000B5'},
    { "micro"                           , L'\x000B5'},
    { "mid;"                            , L'\x02223'},
    { "midast;"                         , L'\x0002A'},
    { "midcir;"                         , L'\x02AF0'},
    { "middot;"                         , L'\x000B7'},
    { "middot"                          , L'\x000B7'},
    { "minus;"                          , L'\x02212'},
    { "minusb;"                         , L'\x0229F'},
    { "minusd;"                         , L'\x02238'},
    { "minusdu;"                        , L'\x02A2A'},
    { "MinusPlus;"                      , L'\x02213'},
    { "mlcp;"                           , L'\x02ADB'},
    { "mldr;"                           , L'\x02026'},
    { "mnplus;"                         , L'\x02213'},
    { "models;"                         , L'\x022A7'},
    { "Mopf;"                           , L'\x1D544'},
    { "mopf;"                           , L'\x1D55E'},
    { "mp;"                             , L'\x02213'},
    { "Mscr;"                           , L'\x02133'},
    { "mscr;"                           , L'\x1D4C2'},
    { "mstpos;"                         , L'\x0223E'},
    { "Mu;"                             , L'\x0039C'},
    { "mu;"                             , L'\x003BC'},
    { "multimap;"                       , L'\x022B8'},
    { "mumap;"                          , L'\x022B8'},
    { "nabla;"                          , L'\x02207'},
    { "Nacute;"                         , L'\x00143'},
    { "nacute;"                         , L'\x00144'},
    { "nang;"                           , L'\x02220'},
    { "nap;"                            , L'\x02249'},
    { "napE;"                           , L'\x02A70'},
    { "napid;"                          , L'\x0224B'},
    { "napos;"                          , L'\x00149'},
    { "napprox;"                        , L'\x02249'},
    { "natur;"                          , L'\x0266E'},
    { "natural;"                        , L'\x0266E'},
    { "naturals;"                       , L'\x02115'},
    { "nbsp;"                           , L'\x000A0'},
    { "nbsp"                            , L'\x000A0'},
    { "nbump;"                          , L'\x0224E'},
    { "nbumpe;"                         , L'\x0224F'},
    { "ncap;"                           , L'\x02A43'},
    { "Ncaron;"                         , L'\x00147'},
    { "ncaron;"                         , L'\x00148'},
    { "Ncedil;"                         , L'\x00145'},
    { "ncedil;"                         , L'\x00146'},
    { "ncong;"                          , L'\x02247'},
    { "ncongdot;"                       , L'\x02A6D'},
    { "ncup;"                           , L'\x02A42'},
    { "Ncy;"                            , L'\x0041D'},
    { "ncy;"                            , L'\x0043D'},
    { "ndash;"                          , L'\x02013'},
    { "ne;"                             , L'\x02260'},
    { "nearhk;"                         , L'\x02924'},
    { "neArr;"                          , L'\x021D7'},
    { "nearr;"                          , L'\x02197'},
    { "nearrow;"                        , L'\x02197'},
    { "nedot;"                          , L'\x02250'},
    { "NegativeMediumSpace;"            , L'\x0200B'},
    { "NegativeThickSpace;"             , L'\x0200B'},
    { "NegativeThinSpace;"              , L'\x0200B'},
    { "NegativeVeryThinSpace;"          , L'\x0200B'},
    { "nequiv;"                         , L'\x02262'},
    { "nesear;"                         , L'\x02928'},
    { "nesim;"                          , L'\x02242'},
    { "NestedGreaterGreater;"           , L'\x0226B'},
    { "NestedLessLess;"                 , L'\x0226A'},
    { "NewLine;"                        , L'\x0000A'},
    { "nexist;"                         , L'\x02204'},
    { "nexists;"                        , L'\x02204'},
    { "Nfr;"                            , L'\x1D511'},
    { "nfr;"                            , L'\x1D52B'},
    { "ngE;"                            , L'\x02267'},
    { "nge;"                            , L'\x02271'},
    { "ngeq;"                           , L'\x02271'},
    { "ngeqq;"                          , L'\x02267'},
    { "ngeqslant;"                      , L'\x02A7E'},
    { "nges;"                           , L'\x02A7E'},
    { "nGg;"                            , L'\x022D9'},
    { "ngsim;"                          , L'\x02275'},
    { "nGt;"                            , L'\x0226B'},
    { "ngt;"                            , L'\x0226F'},
    { "ngtr;"                           , L'\x0226F'},
    { "nGtv;"                           , L'\x0226B'},
    { "nhArr;"                          , L'\x021CE'},
    { "nharr;"                          , L'\x021AE'},
    { "nhpar;"                          , L'\x02AF2'},
    { "ni;"                             , L'\x0220B'},
    { "nis;"                            , L'\x022FC'},
    { "nisd;"                           , L'\x022FA'},
    { "niv;"                            , L'\x0220B'},
    { "NJcy;"                           , L'\x0040A'},
    { "njcy;"                           , L'\x0045A'},
    { "nlArr;"                          , L'\x021CD'},
    { "nlarr;"                          , L'\x0219A'},
    { "nldr;"                           , L'\x02025'},
    { "nlE;"                            , L'\x02266'},
    { "nle;"                            , L'\x02270'},
    { "nLeftarrow;"                     , L'\x021CD'},
    { "nleftarrow;"                     , L'\x0219A'},
    { "nLeftrightarrow;"                , L'\x021CE'},
    { "nleftrightarrow;"                , L'\x021AE'},
    { "nleq;"                           , L'\x02270'},
    { "nleqq;"                          , L'\x02266'},
    { "nleqslant;"                      , L'\x02A7D'},
    { "nles;"                           , L'\x02A7D'},
    { "nless;"                          , L'\x0226E'},
    { "nLl;"                            , L'\x022D8'},
    { "nlsim;"                          , L'\x02274'},
    { "nLt;"                            , L'\x0226A'},
    { "nlt;"                            , L'\x0226E'},
    { "nltri;"                          , L'\x022EA'},
    { "nltrie;"                         , L'\x022EC'},
    { "nLtv;"                           , L'\x0226A'},
    { "nmid;"                           , L'\x02224'},
    { "NoBreak;"                        , L'\x02060'},
    { "NonBreakingSpace;"               , L'\x000A0'},
    { "Nopf;"                           , L'\x02115'},
    { "nopf;"                           , L'\x1D55F'},
    { "Not;"                            , L'\x02AEC'},
    { "not;"                            , L'\x000AC'},
    { "not"                             , L'\x000AC'},
    { "NotCongruent;"                   , L'\x02262'},
    { "NotCupCap;"                      , L'\x0226D'},
    { "NotDoubleVerticalBar;"           , L'\x02226'},
    { "NotElement;"                     , L'\x02209'},
    { "NotEqual;"                       , L'\x02260'},
    { "NotEqualTilde;"                  , L'\x02242'},
    { "NotExists;"                      , L'\x02204'},
    { "NotGreater;"                     , L'\x0226F'},
    { "NotGreaterEqual;"                , L'\x02271'},
    { "NotGreaterFullEqual;"            , L'\x02267'},
    { "NotGreaterGreater;"              , L'\x0226B'},
    { "NotGreaterLess;"                 , L'\x02279'},
    { "NotGreaterSlantEqual;"           , L'\x02A7E'},
    { "NotGreaterTilde;"                , L'\x02275'},
    { "NotHumpDownHump;"                , L'\x0224E'},
    { "NotHumpEqual;"                   , L'\x0224F'},
    { "notin;"                          , L'\x02209'},
    { "notindot;"                       , L'\x022F5'},
    { "notinE;"                         , L'\x022F9'},
    { "notinva;"                        , L'\x02209'},
    { "notinvb;"                        , L'\x022F7'},
    { "notinvc;"                        , L'\x022F6'},
    { "NotLeftTriangle;"                , L'\x022EA'},
    { "NotLeftTriangleBar;"             , L'\x029CF'},
    { "NotLeftTriangleEqual;"           , L'\x022EC'},
    { "NotLess;"                        , L'\x0226E'},
    { "NotLessEqual;"                   , L'\x02270'},
    { "NotLessGreater;"                 , L'\x02278'},
    { "NotLessLess;"                    , L'\x0226A'},
    { "NotLessSlantEqual;"              , L'\x02A7D'},
    { "NotLessTilde;"                   , L'\x02274'},
    { "NotNestedGreaterGreater;"        , L'\x02AA2'},
    { "NotNestedLessLess;"              , L'\x02AA1'},
    { "notni;"                          , L'\x0220C'},
    { "notniva;"                        , L'\x0220C'},
    { "notnivb;"                        , L'\x022FE'},
    { "notnivc;"                        , L'\x022FD'},
    { "NotPrecedes;"                    , L'\x02280'},
    { "NotPrecedesEqual;"               , L'\x02AAF'},
    { "NotPrecedesSlantEqual;"          , L'\x022E0'},
    { "NotReverseElement;"              , L'\x0220C'},
    { "NotRightTriangle;"               , L'\x022EB'},
    { "NotRightTriangleBar;"            , L'\x029D0'},
    { "NotRightTriangleEqual;"          , L'\x022ED'},
    { "NotSquareSubset;"                , L'\x0228F'},
    { "NotSquareSubsetEqual;"           , L'\x022E2'},
    { "NotSquareSuperset;"              , L'\x02290'},
    { "NotSquareSupersetEqual;"         , L'\x022E3'},
    { "NotSubset;"                      , L'\x02282'},
    { "NotSubsetEqual;"                 , L'\x02288'},
    { "NotSucceeds;"                    , L'\x02281'},
    { "NotSucceedsEqual;"               , L'\x02AB0'},
    { "NotSucceedsSlantEqual;"          , L'\x022E1'},
    { "NotSucceedsTilde;"               , L'\x0227F'},
    { "NotSuperset;"                    , L'\x02283'},
    { "NotSupersetEqual;"               , L'\x02289'},
    { "NotTilde;"                       , L'\x02241'},
    { "NotTildeEqual;"                  , L'\x02244'},
    { "NotTildeFullEqual;"              , L'\x02247'},
    { "NotTildeTilde;"                  , L'\x02249'},
    { "NotVerticalBar;"                 , L'\x02224'},
    { "npar;"                           , L'\x02226'},
    { "nparallel;"                      , L'\x02226'},
    { "nparsl;"                         , L'\x02AFD'},
    { "npart;"                          , L'\x02202'},
    { "npolint;"                        , L'\x02A14'},
    { "npr;"                            , L'\x02280'},
    { "nprcue;"                         , L'\x022E0'},
    { "npre;"                           , L'\x02AAF'},
    { "nprec;"                          , L'\x02280'},
    { "npreceq;"                        , L'\x02AAF'},
    { "nrArr;"                          , L'\x021CF'},
    { "nrarr;"                          , L'\x0219B'},
    { "nrarrc;"                         , L'\x02933'},
    { "nrarrw;"                         , L'\x0219D'},
    { "nRightarrow;"                    , L'\x021CF'},
    { "nrightarrow;"                    , L'\x0219B'},
    { "nrtri;"                          , L'\x022EB'},
    { "nrtrie;"                         , L'\x022ED'},
    { "nsc;"                            , L'\x02281'},
    { "nsccue;"                         , L'\x022E1'},
    { "nsce;"                           , L'\x02AB0'},
    { "Nscr;"                           , L'\x1D4A9'},
    { "nscr;"                           , L'\x1D4C3'},
    { "nshortmid;"                      , L'\x02224'},
    { "nshortparallel;"                 , L'\x02226'},
    { "nsim;"                           , L'\x02241'},
    { "nsime;"                          , L'\x02244'},
    { "nsimeq;"                         , L'\x02244'},
    { "nsmid;"                          , L'\x02224'},
    { "nspar;"                          , L'\x02226'},
    { "nsqsube;"                        , L'\x022E2'},
    { "nsqsupe;"                        , L'\x022E3'},
    { "nsub;"                           , L'\x02284'},
    { "nsubE;"                          , L'\x02AC5'},
    { "nsube;"                          , L'\x02288'},
    { "nsubset;"                        , L'\x02282'},
    { "nsubseteq;"                      , L'\x02288'},
    { "nsubseteqq;"                     , L'\x02AC5'},
    { "nsucc;"                          , L'\x02281'},
    { "nsucceq;"                        , L'\x02AB0'},
    { "nsup;"                           , L'\x02285'},
    { "nsupE;"                          , L'\x02AC6'},
    { "nsupe;"                          , L'\x02289'},
    { "nsupset;"                        , L'\x02283'},
    { "nsupseteq;"                      , L'\x02289'},
    { "nsupseteqq;"                     , L'\x02AC6'},
    { "ntgl;"                           , L'\x02279'},
    { "Ntilde;"                         , L'\x000D1'},
    { "Ntilde"                          , L'\x000D1'},
    { "ntilde;"                         , L'\x000F1'},
    { "ntilde"                          , L'\x000F1'},
    { "ntlg;"                           , L'\x02278'},
    { "ntriangleleft;"                  , L'\x022EA'},
    { "ntrianglelefteq;"                , L'\x022EC'},
    { "ntriangleright;"                 , L'\x022EB'},
    { "ntrianglerighteq;"               , L'\x022ED'},
    { "Nu;"                             , L'\x0039D'},
    { "nu;"                             , L'\x003BD'},
    { "num;"                            , L'\x00023'},
    { "numero;"                         , L'\x02116'},
    { "numsp;"                          , L'\x02007'},
    { "nvap;"                           , L'\x0224D'},
    { "nVDash;"                         , L'\x022AF'},
    { "nVdash;"                         , L'\x022AE'},
    { "nvDash;"                         , L'\x022AD'},
    { "nvdash;"                         , L'\x022AC'},
    { "nvge;"                           , L'\x02265'},
    { "nvgt;"                           , L'\x0003E'},
    { "nvHarr;"                         , L'\x02904'},
    { "nvinfin;"                        , L'\x029DE'},
    { "nvlArr;"                         , L'\x02902'},
    { "nvle;"                           , L'\x02264'},
    { "nvlt;"                           , L'\x0003C'},
    { "nvltrie;"                        , L'\x022B4'},
    { "nvrArr;"                         , L'\x02903'},
    { "nvrtrie;"                        , L'\x022B5'},
    { "nvsim;"                          , L'\x0223C'},
    { "nwarhk;"                         , L'\x02923'},
    { "nwArr;"                          , L'\x021D6'},
    { "nwarr;"                          , L'\x02196'},
    { "nwarrow;"                        , L'\x02196'},
    { "nwnear;"                         , L'\x02927'},
    { "Oacute;"                         , L'\x000D3'},
    { "Oacute"                          , L'\x000D3'},
    { "oacute;"                         , L'\x000F3'},
    { "oacute"                          , L'\x000F3'},
    { "oast;"                           , L'\x0229B'},
    { "ocir;"                           , L'\x0229A'},
    { "Ocirc;"                          , L'\x000D4'},
    { "Ocirc"                           , L'\x000D4'},
    { "ocirc;"                          , L'\x000F4'},
    { "ocirc"                           , L'\x000F4'},
    { "Ocy;"                            , L'\x0041E'},
    { "ocy;"                            , L'\x0043E'},
    { "odash;"                          , L'\x0229D'},
    { "Odblac;"                         , L'\x00150'},
    { "odblac;"                         , L'\x00151'},
    { "odiv;"                           , L'\x02A38'},
    { "odot;"                           , L'\x02299'},
    { "odsold;"                         , L'\x029BC'},
    { "OElig;"                          , L'\x00152'},
    { "oelig;"                          , L'\x00153'},
    { "ofcir;"                          , L'\x029BF'},
    { "Ofr;"                            , L'\x1D512'},
    { "ofr;"                            , L'\x1D52C'},
    { "ogon;"                           , L'\x002DB'},
    { "Ograve;"                         , L'\x000D2'},
    { "Ograve"                          , L'\x000D2'},
    { "ograve;"                         , L'\x000F2'},
    { "ograve"                          , L'\x000F2'},
    { "ogt;"                            , L'\x029C1'},
    { "ohbar;"                          , L'\x029B5'},
    { "ohm;"                            , L'\x003A9'},
    { "oint;"                           , L'\x0222E'},
    { "olarr;"                          , L'\x021BA'},
    { "olcir;"                          , L'\x029BE'},
    { "olcross;"                        , L'\x029BB'},
    { "oline;"                          , L'\x0203E'},
    { "olt;"                            , L'\x029C0'},
    { "Omacr;"                          , L'\x0014C'},
    { "omacr;"                          , L'\x0014D'},
    { "Omega;"                          , L'\x003A9'},
    { "omega;"                          , L'\x003C9'},
    { "Omicron;"                        , L'\x0039F'},
    { "omicron;"                        , L'\x003BF'},
    { "omid;"                           , L'\x029B6'},
    { "ominus;"                         , L'\x02296'},
    { "Oopf;"                           , L'\x1D546'},
    { "oopf;"                           , L'\x1D560'},
    { "opar;"                           , L'\x029B7'},
    { "OpenCurlyDoubleQuote;"           , L'\x0201C'},
    { "OpenCurlyQuote;"                 , L'\x02018'},
    { "operp;"                          , L'\x029B9'},
    { "oplus;"                          , L'\x02295'},
    { "Or;"                             , L'\x02A54'},
    { "or;"                             , L'\x02228'},
    { "orarr;"                          , L'\x021BB'},
    { "ord;"                            , L'\x02A5D'},
    { "order;"                          , L'\x02134'},
    { "orderof;"                        , L'\x02134'},
    { "ordf;"                           , L'\x000AA'},
    { "ordf"                            , L'\x000AA'},
    { "ordm;"                           , L'\x000BA'},
    { "ordm"                            , L'\x000BA'},
    { "origof;"                         , L'\x022B6'},
    { "oror;"                           , L'\x02A56'},
    { "orslope;"                        , L'\x02A57'},
    { "orv;"                            , L'\x02A5B'},
    { "oS;"                             , L'\x024C8'},
    { "Oscr;"                           , L'\x1D4AA'},
    { "oscr;"                           , L'\x02134'},
    { "Oslash;"                         , L'\x000D8'},
    { "Oslash"                          , L'\x000D8'},
    { "oslash;"                         , L'\x000F8'},
    { "oslash"                          , L'\x000F8'},
    { "osol;"                           , L'\x02298'},
    { "Otilde;"                         , L'\x000D5'},
    { "Otilde"                          , L'\x000D5'},
    { "otilde;"                         , L'\x000F5'},
    { "otilde"                          , L'\x000F5'},
    { "Otimes;"                         , L'\x02A37'},
    { "otimes;"                         , L'\x02297'},
    { "otimesas;"                       , L'\x02A36'},
    { "Ouml;"                           , L'\x000D6'},
    { "Ouml"                            , L'\x000D6'},
    { "ouml;"                           , L'\x000F6'},
    { "ouml"                            , L'\x000F6'},
    { "ovbar;"                          , L'\x0233D'},
    { "OverBar;"                        , L'\x0203E'},
    { "OverBrace;"                      , L'\x023DE'},
    { "OverBracket;"                    , L'\x023B4'},
    { "OverParenthesis;"                , L'\x023DC'},
    { "par;"                            , L'\x02225'},
    { "para;"                           , L'\x000B6'},
    { "para"                            , L'\x000B6'},
    { "parallel;"                       , L'\x02225'},
    { "parsim;"                         , L'\x02AF3'},
    { "parsl;"                          , L'\x02AFD'},
    { "part;"                           , L'\x02202'},
    { "PartialD;"                       , L'\x02202'},
    { "Pcy;"                            , L'\x0041F'},
    { "pcy;"                            , L'\x0043F'},
    { "percnt;"                         , L'\x00025'},
    { "period;"                         , L'\x0002E'},
    { "permil;"                         , L'\x02030'},
    { "perp;"                           , L'\x022A5'},
    { "pertenk;"                        , L'\x02031'},
    { "Pfr;"                            , L'\x1D513'},
    { "pfr;"                            , L'\x1D52D'},
    { "Phi;"                            , L'\x003A6'},
    { "phi;"                            , L'\x003C6'},
    { "phiv;"                           , L'\x003D5'},
    { "phmmat;"                         , L'\x02133'},
    { "phone;"                          , L'\x0260E'},
    { "Pi;"                             , L'\x003A0'},
    { "pi;"                             , L'\x003C0'},
    { "pitchfork;"                      , L'\x022D4'},
    { "piv;"                            , L'\x003D6'},
    { "planck;"                         , L'\x0210F'},
    { "planckh;"                        , L'\x0210E'},
    { "plankv;"                         , L'\x0210F'},
    { "plus;"                           , L'\x0002B'},
    { "plusacir;"                       , L'\x02A23'},
    { "plusb;"                          , L'\x0229E'},
    { "pluscir;"                        , L'\x02A22'},
    { "plusdo;"                         , L'\x02214'},
    { "plusdu;"                         , L'\x02A25'},
    { "pluse;"                          , L'\x02A72'},
    { "PlusMinus;"                      , L'\x000B1'},
    { "plusmn;"                         , L'\x000B1'},
    { "plusmn"                          , L'\x000B1'},
    { "plussim;"                        , L'\x02A26'},
    { "plustwo;"                        , L'\x02A27'},
    { "pm;"                             , L'\x000B1'},
    { "Poincareplane;"                  , L'\x0210C'},
    { "pointint;"                       , L'\x02A15'},
    { "Popf;"                           , L'\x02119'},
    { "popf;"                           , L'\x1D561'},
    { "pound;"                          , L'\x000A3'},
    { "pound"                           , L'\x000A3'},
    { "Pr;"                             , L'\x02ABB'},
    { "pr;"                             , L'\x0227A'},
    { "prap;"                           , L'\x02AB7'},
    { "prcue;"                          , L'\x0227C'},
    { "prE;"                            , L'\x02AB3'},
    { "pre;"                            , L'\x02AAF'},
    { "prec;"                           , L'\x0227A'},
    { "precapprox;"                     , L'\x02AB7'},
    { "preccurlyeq;"                    , L'\x0227C'},
    { "Precedes;"                       , L'\x0227A'},
    { "PrecedesEqual;"                  , L'\x02AAF'},
    { "PrecedesSlantEqual;"             , L'\x0227C'},
    { "PrecedesTilde;"                  , L'\x0227E'},
    { "preceq;"                         , L'\x02AAF'},
    { "precnapprox;"                    , L'\x02AB9'},
    { "precneqq;"                       , L'\x02AB5'},
    { "precnsim;"                       , L'\x022E8'},
    { "precsim;"                        , L'\x0227E'},
    { "Prime;"                          , L'\x02033'},
    { "prime;"                          , L'\x02032'},
    { "primes;"                         , L'\x02119'},
    { "prnap;"                          , L'\x02AB9'},
    { "prnE;"                           , L'\x02AB5'},
    { "prnsim;"                         , L'\x022E8'},
    { "prod;"                           , L'\x0220F'},
    { "Product;"                        , L'\x0220F'},
    { "profalar;"                       , L'\x0232E'},
    { "profline;"                       , L'\x02312'},
    { "profsurf;"                       , L'\x02313'},
    { "prop;"                           , L'\x0221D'},
    { "Proportion;"                     , L'\x02237'},
    { "Proportional;"                   , L'\x0221D'},
    { "propto;"                         , L'\x0221D'},
    { "prsim;"                          , L'\x0227E'},
    { "prurel;"                         , L'\x022B0'},
    { "Pscr;"                           , L'\x1D4AB'},
    { "pscr;"                           , L'\x1D4C5'},
    { "Psi;"                            , L'\x003A8'},
    { "psi;"                            , L'\x003C8'},
    { "puncsp;"                         , L'\x02008'},
    { "Qfr;"                            , L'\x1D514'},
    { "qfr;"                            , L'\x1D52E'},
    { "qint;"                           , L'\x02A0C'},
    { "Qopf;"                           , L'\x0211A'},
    { "qopf;"                           , L'\x1D562'},
    { "qprime;"                         , L'\x02057'},
    { "Qscr;"                           , L'\x1D4AC'},
    { "qscr;"                           , L'\x1D4C6'},
    { "quaternions;"                    , L'\x0210D'},
    { "quatint;"                        , L'\x02A16'},
    { "quest;"                          , L'\x0003F'},
    { "questeq;"                        , L'\x0225F'},
    { "QUOT;"                           , L'\x00022'},
    { "QUOT"                            , L'\x00022'},
    { "quot;"                           , L'\x00022'},
    { "quot"                            , L'\x00022'},
    { "rAarr;"                          , L'\x021DB'},
    { "race;"                           , L'\x0223D'},
    { "Racute;"                         , L'\x00154'},
    { "racute;"                         , L'\x00155'},
    { "radic;"                          , L'\x0221A'},
    { "raemptyv;"                       , L'\x029B3'},
    { "Rang;"                           , L'\x027EB'},
    { "rang;"                           , L'\x027E9'},
    { "rangd;"                          , L'\x02992'},
    { "range;"                          , L'\x029A5'},
    { "rangle;"                         , L'\x027E9'},
    { "raquo;"                          , L'\x000BB'},
    { "raquo"                           , L'\x000BB'},
    { "Rarr;"                           , L'\x021A0'},
    { "rArr;"                           , L'\x021D2'},
    { "rarr;"                           , L'\x02192'},
    { "rarrap;"                         , L'\x02975'},
    { "rarrb;"                          , L'\x021E5'},
    { "rarrbfs;"                        , L'\x02920'},
    { "rarrc;"                          , L'\x02933'},
    { "rarrfs;"                         , L'\x0291E'},
    { "rarrhk;"                         , L'\x021AA'},
    { "rarrlp;"                         , L'\x021AC'},
    { "rarrpl;"                         , L'\x02945'},
    { "rarrsim;"                        , L'\x02974'},
    { "Rarrtl;"                         , L'\x02916'},
    { "rarrtl;"                         , L'\x021A3'},
    { "rarrw;"                          , L'\x0219D'},
    { "rAtail;"                         , L'\x0291C'},
    { "ratail;"                         , L'\x0291A'},
    { "ratio;"                          , L'\x02236'},
    { "rationals;"                      , L'\x0211A'},
    { "RBarr;"                          , L'\x02910'},
    { "rBarr;"                          , L'\x0290F'},
    { "rbarr;"                          , L'\x0290D'},
    { "rbbrk;"                          , L'\x02773'},
    { "rbrace;"                         , L'\x0007D'},
    { "rbrack;"                         , L'\x0005D'},
    { "rbrke;"                          , L'\x0298C'},
    { "rbrksld;"                        , L'\x0298E'},
    { "rbrkslu;"                        , L'\x02990'},
    { "Rcaron;"                         , L'\x00158'},
    { "rcaron;"                         , L'\x00159'},
    { "Rcedil;"                         , L'\x00156'},
    { "rcedil;"                         , L'\x00157'},
    { "rceil;"                          , L'\x02309'},
    { "rcub;"                           , L'\x0007D'},
    { "Rcy;"                            , L'\x00420'},
    { "rcy;"                            , L'\x00440'},
    { "rdca;"                           , L'\x02937'},
    { "rdldhar;"                        , L'\x02969'},
    { "rdquo;"                          , L'\x0201D'},
    { "rdquor;"                         , L'\x0201D'},
    { "rdsh;"                           , L'\x021B3'},
    { "Re;"                             , L'\x0211C'},
    { "real;"                           , L'\x0211C'},
    { "realine;"                        , L'\x0211B'},
    { "realpart;"                       , L'\x0211C'},
    { "reals;"                          , L'\x0211D'},
    { "rect;"                           , L'\x025AD'},
    { "REG;"                            , L'\x000AE'},
    { "REG"                             , L'\x000AE'},
    { "reg;"                            , L'\x000AE'},
    { "reg"                             , L'\x000AE'},
    { "ReverseElement;"                 , L'\x0220B'},
    { "ReverseEquilibrium;"             , L'\x021CB'},
    { "ReverseUpEquilibrium;"           , L'\x0296F'},
    { "rfisht;"                         , L'\x0297D'},
    { "rfloor;"                         , L'\x0230B'},
    { "Rfr;"                            , L'\x0211C'},
    { "rfr;"                            , L'\x1D52F'},
    { "rHar;"                           , L'\x02964'},
    { "rhard;"                          , L'\x021C1'},
    { "rharu;"                          , L'\x021C0'},
    { "rharul;"                         , L'\x0296C'},
    { "Rho;"                            , L'\x003A1'},
    { "rho;"                            , L'\x003C1'},
    { "rhov;"                           , L'\x003F1'},
    { "RightAngleBracket;"              , L'\x027E9'},
    { "RightArrow;"                     , L'\x02192'},
    { "Rightarrow;"                     , L'\x021D2'},
    { "rightarrow;"                     , L'\x02192'},
    { "RightArrowBar;"                  , L'\x021E5'},
    { "RightArrowLeftArrow;"            , L'\x021C4'},
    { "rightarrowtail;"                 , L'\x021A3'},
    { "RightCeiling;"                   , L'\x02309'},
    { "RightDoubleBracket;"             , L'\x027E7'},
    { "RightDownTeeVector;"             , L'\x0295D'},
    { "RightDownVector;"                , L'\x021C2'},
    { "RightDownVectorBar;"             , L'\x02955'},
    { "RightFloor;"                     , L'\x0230B'},
    { "rightharpoondown;"               , L'\x021C1'},
    { "rightharpoonup;"                 , L'\x021C0'},
    { "rightleftarrows;"                , L'\x021C4'},
    { "rightleftharpoons;"              , L'\x021CC'},
    { "rightrightarrows;"               , L'\x021C9'},
    { "rightsquigarrow;"                , L'\x0219D'},
    { "RightTee;"                       , L'\x022A2'},
    { "RightTeeArrow;"                  , L'\x021A6'},
    { "RightTeeVector;"                 , L'\x0295B'},
    { "rightthreetimes;"                , L'\x022CC'},
    { "RightTriangle;"                  , L'\x022B3'},
    { "RightTriangleBar;"               , L'\x029D0'},
    { "RightTriangleEqual;"             , L'\x022B5'},
    { "RightUpDownVector;"              , L'\x0294F'},
    { "RightUpTeeVector;"               , L'\x0295C'},
    { "RightUpVector;"                  , L'\x021BE'},
    { "RightUpVectorBar;"               , L'\x02954'},
    { "RightVector;"                    , L'\x021C0'},
    { "RightVectorBar;"                 , L'\x02953'},
    { "ring;"                           , L'\x002DA'},
    { "risingdotseq;"                   , L'\x02253'},
    { "rlarr;"                          , L'\x021C4'},
    { "rlhar;"                          , L'\x021CC'},
    { "rlm;"                            , L'\x0200F'},
    { "rmoust;"                         , L'\x023B1'},
    { "rmoustache;"                     , L'\x023B1'},
    { "rnmid;"                          , L'\x02AEE'},
    { "roang;"                          , L'\x027ED'},
    { "roarr;"                          , L'\x021FE'},
    { "robrk;"                          , L'\x027E7'},
    { "ropar;"                          , L'\x02986'},
    { "Ropf;"                           , L'\x0211D'},
    { "ropf;"                           , L'\x1D563'},
    { "roplus;"                         , L'\x02A2E'},
    { "rotimes;"                        , L'\x02A35'},
    { "RoundImplies;"                   , L'\x02970'},
    { "rpar;"                           , L'\x00029'},
    { "rpargt;"                         , L'\x02994'},
    { "rppolint;"                       , L'\x02A12'},
    { "rrarr;"                          , L'\x021C9'},
    { "Rrightarrow;"                    , L'\x021DB'},
    { "rsaquo;"                         , L'\x0203A'},
    { "Rscr;"                           , L'\x0211B'},
    { "rscr;"                           , L'\x1D4C7'},
    { "Rsh;"                            , L'\x021B1'},
    { "rsh;"                            , L'\x021B1'},
    { "rsqb;"                           , L'\x0005D'},
    { "rsquo;"                          , L'\x02019'},
    { "rsquor;"                         , L'\x02019'},
    { "rthree;"                         , L'\x022CC'},
    { "rtimes;"                         , L'\x022CA'},
    { "rtri;"                           , L'\x025B9'},
    { "rtrie;"                          , L'\x022B5'},
    { "rtrif;"                          , L'\x025B8'},
    { "rtriltri;"                       , L'\x029CE'},
    { "RuleDelayed;"                    , L'\x029F4'},
    { "ruluhar;"                        , L'\x02968'},
    { "rx;"                             , L'\x0211E'},
    { "Sacute;"                         , L'\x0015A'},
    { "sacute;"                         , L'\x0015B'},
    { "sbquo;"                          , L'\x0201A'},
    { "Sc;"                             , L'\x02ABC'},
    { "sc;"                             , L'\x0227B'},
    { "scap;"                           , L'\x02AB8'},
    { "Scaron;"                         , L'\x00160'},
    { "scaron;"                         , L'\x00161'},
    { "sccue;"                          , L'\x0227D'},
    { "scE;"                            , L'\x02AB4'},
    { "sce;"                            , L'\x02AB0'},
    { "Scedil;"                         , L'\x0015E'},
    { "scedil;"                         , L'\x0015F'},
    { "Scirc;"                          , L'\x0015C'},
    { "scirc;"                          , L'\x0015D'},
    { "scnap;"                          , L'\x02ABA'},
    { "scnE;"                           , L'\x02AB6'},
    { "scnsim;"                         , L'\x022E9'},
    { "scpolint;"                       , L'\x02A13'},
    { "scsim;"                          , L'\x0227F'},
    { "Scy;"                            , L'\x00421'},
    { "scy;"                            , L'\x00441'},
    { "sdot;"                           , L'\x022C5'},
    { "sdotb;"                          , L'\x022A1'},
    { "sdote;"                          , L'\x02A66'},
    { "searhk;"                         , L'\x02925'},
    { "seArr;"                          , L'\x021D8'},
    { "searr;"                          , L'\x02198'},
    { "searrow;"                        , L'\x02198'},
    { "sect;"                           , L'\x000A7'},
    { "sect"                            , L'\x000A7'},
    { "semi;"                           , L'\x0003B'},
    { "seswar;"                         , L'\x02929'},
    { "setminus;"                       , L'\x02216'},
    { "setmn;"                          , L'\x02216'},
    { "sext;"                           , L'\x02736'},
    { "Sfr;"                            , L'\x1D516'},
    { "sfr;"                            , L'\x1D530'},
    { "sfrown;"                         , L'\x02322'},
    { "sharp;"                          , L'\x0266F'},
    { "SHCHcy;"                         , L'\x00429'},
    { "shchcy;"                         , L'\x00449'},
    { "SHcy;"                           , L'\x00428'},
    { "shcy;"                           , L'\x00448'},
    { "ShortDownArrow;"                 , L'\x02193'},
    { "ShortLeftArrow;"                 , L'\x02190'},
    { "shortmid;"                       , L'\x02223'},
    { "shortparallel;"                  , L'\x02225'},
    { "ShortRightArrow;"                , L'\x02192'},
    { "ShortUpArrow;"                   , L'\x02191'},
    { "shy;"                            , L'\x000AD'},
    { "shy"                             , L'\x000AD'},
    { "Sigma;"                          , L'\x003A3'},
    { "sigma;"                          , L'\x003C3'},
    { "sigmaf;"                         , L'\x003C2'},
    { "sigmav;"                         , L'\x003C2'},
    { "sim;"                            , L'\x0223C'},
    { "simdot;"                         , L'\x02A6A'},
    { "sime;"                           , L'\x02243'},
    { "simeq;"                          , L'\x02243'},
    { "simg;"                           , L'\x02A9E'},
    { "simgE;"                          , L'\x02AA0'},
    { "siml;"                           , L'\x02A9D'},
    { "simlE;"                          , L'\x02A9F'},
    { "simne;"                          , L'\x02246'},
    { "simplus;"                        , L'\x02A24'},
    { "simrarr;"                        , L'\x02972'},
    { "slarr;"                          , L'\x02190'},
    { "SmallCircle;"                    , L'\x02218'},
    { "smallsetminus;"                  , L'\x02216'},
    { "smashp;"                         , L'\x02A33'},
    { "smeparsl;"                       , L'\x029E4'},
    { "smid;"                           , L'\x02223'},
    { "smile;"                          , L'\x02323'},
    { "smt;"                            , L'\x02AAA'},
    { "smte;"                           , L'\x02AAC'},
    { "smtes;"                          , L'\x02AAC'},
    { "SOFTcy;"                         , L'\x0042C'},
    { "softcy;"                         , L'\x0044C'},
    { "sol;"                            , L'\x0002F'},
    { "solb;"                           , L'\x029C4'},
    { "solbar;"                         , L'\x0233F'},
    { "Sopf;"                           , L'\x1D54A'},
    { "sopf;"                           , L'\x1D564'},
    { "spades;"                         , L'\x02660'},
    { "spadesuit;"                      , L'\x02660'},
    { "spar;"                           , L'\x02225'},
    { "sqcap;"                          , L'\x02293'},
    { "sqcaps;"                         , L'\x02293'},
    { "sqcup;"                          , L'\x02294'},
    { "sqcups;"                         , L'\x02294'},
    { "Sqrt;"                           , L'\x0221A'},
    { "sqsub;"                          , L'\x0228F'},
    { "sqsube;"                         , L'\x02291'},
    { "sqsubset;"                       , L'\x0228F'},
    { "sqsubseteq;"                     , L'\x02291'},
    { "sqsup;"                          , L'\x02290'},
    { "sqsupe;"                         , L'\x02292'},
    { "sqsupset;"                       , L'\x02290'},
    { "sqsupseteq;"                     , L'\x02292'},
    { "squ;"                            , L'\x025A1'},
    { "Square;"                         , L'\x025A1'},
    { "square;"                         , L'\x025A1'},
    { "SquareIntersection;"             , L'\x02293'},
    { "SquareSubset;"                   , L'\x0228F'},
    { "SquareSubsetEqual;"              , L'\x02291'},
    { "SquareSuperset;"                 , L'\x02290'},
    { "SquareSupersetEqual;"            , L'\x02292'},
    { "SquareUnion;"                    , L'\x02294'},
    { "squarf;"                         , L'\x025AA'},
    { "squf;"                           , L'\x025AA'},
    { "srarr;"                          , L'\x02192'},
    { "Sscr;"                           , L'\x1D4AE'},
    { "sscr;"                           , L'\x1D4C8'},
    { "ssetmn;"                         , L'\x02216'},
    { "ssmile;"                         , L'\x02323'},
    { "sstarf;"                         , L'\x022C6'},
    { "Star;"                           , L'\x022C6'},
    { "star;"                           , L'\x02606'},
    { "starf;"                          , L'\x02605'},
    { "straightepsilon;"                , L'\x003F5'},
    { "straightphi;"                    , L'\x003D5'},
    { "strns;"                          , L'\x000AF'},
    { "Sub;"                            , L'\x022D0'},
    { "sub;"                            , L'\x02282'},
    { "subdot;"                         , L'\x02ABD'},
    { "subE;"                           , L'\x02AC5'},
    { "sube;"                           , L'\x02286'},
    { "subedot;"                        , L'\x02AC3'},
    { "submult;"                        , L'\x02AC1'},
    { "subnE;"                          , L'\x02ACB'},
    { "subne;"                          , L'\x0228A'},
    { "subplus;"                        , L'\x02ABF'},
    { "subrarr;"                        , L'\x02979'},
    { "Subset;"                         , L'\x022D0'},
    { "subset;"                         , L'\x02282'},
    { "subseteq;"                       , L'\x02286'},
    { "subseteqq;"                      , L'\x02AC5'},
    { "SubsetEqual;"                    , L'\x02286'},
    { "subsetneq;"                      , L'\x0228A'},
    { "subsetneqq;"                     , L'\x02ACB'},
    { "subsim;"                         , L'\x02AC7'},
    { "subsub;"                         , L'\x02AD5'},
    { "subsup;"                         , L'\x02AD3'},
    { "succ;"                           , L'\x0227B'},
    { "succapprox;"                     , L'\x02AB8'},
    { "succcurlyeq;"                    , L'\x0227D'},
    { "Succeeds;"                       , L'\x0227B'},
    { "SucceedsEqual;"                  , L'\x02AB0'},
    { "SucceedsSlantEqual;"             , L'\x0227D'},
    { "SucceedsTilde;"                  , L'\x0227F'},
    { "succeq;"                         , L'\x02AB0'},
    { "succnapprox;"                    , L'\x02ABA'},
    { "succneqq;"                       , L'\x02AB6'},
    { "succnsim;"                       , L'\x022E9'},
    { "succsim;"                        , L'\x0227F'},
    { "SuchThat;"                       , L'\x0220B'},
    { "Sum;"                            , L'\x02211'},
    { "sum;"                            , L'\x02211'},
    { "sung;"                           , L'\x0266A'},
    { "Sup;"                            , L'\x022D1'},
    { "sup;"                            , L'\x02283'},
    { "sup1;"                           , L'\x000B9'},
    { "sup1"                            , L'\x000B9'},
    { "sup2;"                           , L'\x000B2'},
    { "sup2"                            , L'\x000B2'},
    { "sup3;"                           , L'\x000B3'},
    { "sup3"                            , L'\x000B3'},
    { "supdot;"                         , L'\x02ABE'},
    { "supdsub;"                        , L'\x02AD8'},
    { "supE;"                           , L'\x02AC6'},
    { "supe;"                           , L'\x02287'},
    { "supedot;"                        , L'\x02AC4'},
    { "Superset;"                       , L'\x02283'},
    { "SupersetEqual;"                  , L'\x02287'},
    { "suphsol;"                        , L'\x027C9'},
    { "suphsub;"                        , L'\x02AD7'},
    { "suplarr;"                        , L'\x0297B'},
    { "supmult;"                        , L'\x02AC2'},
    { "supnE;"                          , L'\x02ACC'},
    { "supne;"                          , L'\x0228B'},
    { "supplus;"                        , L'\x02AC0'},
    { "Supset;"                         , L'\x022D1'},
    { "supset;"                         , L'\x02283'},
    { "supseteq;"                       , L'\x02287'},
    { "supseteqq;"                      , L'\x02AC6'},
    { "supsetneq;"                      , L'\x0228B'},
    { "supsetneqq;"                     , L'\x02ACC'},
    { "supsim;"                         , L'\x02AC8'},
    { "supsub;"                         , L'\x02AD4'},
    { "supsup;"                         , L'\x02AD6'},
    { "swarhk;"                         , L'\x02926'},
    { "swArr;"                          , L'\x021D9'},
    { "swarr;"                          , L'\x02199'},
    { "swarrow;"                        , L'\x02199'},
    { "swnwar;"                         , L'\x0292A'},
    { "szlig;"                          , L'\x000DF'},
    { "szlig"                           , L'\x000DF'},
    { "Tab;"                            , L'\x00009'},
    { "target;"                         , L'\x02316'},
    { "Tau;"                            , L'\x003A4'},
    { "tau;"                            , L'\x003C4'},
    { "tbrk;"                           , L'\x023B4'},
    { "Tcaron;"                         , L'\x00164'},
    { "tcaron;"                         , L'\x00165'},
    { "Tcedil;"                         , L'\x00162'},
    { "tcedil;"                         , L'\x00163'},
    { "Tcy;"                            , L'\x00422'},
    { "tcy;"                            , L'\x00442'},
    { "tdot;"                           , L'\x020DB'},
    { "telrec;"                         , L'\x02315'},
    { "Tfr;"                            , L'\x1D517'},
    { "tfr;"                            , L'\x1D531'},
    { "there4;"                         , L'\x02234'},
    { "Therefore;"                      , L'\x02234'},
    { "therefore;"                      , L'\x02234'},
    { "Theta;"                          , L'\x00398'},
    { "theta;"                          , L'\x003B8'},
    { "thetasym;"                       , L'\x003D1'},
    { "thetav;"                         , L'\x003D1'},
    { "thickapprox;"                    , L'\x02248'},
    { "thicksim;"                       , L'\x0223C'},
    { "ThickSpace;"                     , L'\x0205F'},
    { "thinsp;"                         , L'\x02009'},
    { "ThinSpace;"                      , L'\x02009'},
    { "thkap;"                          , L'\x02248'},
    { "thksim;"                         , L'\x0223C'},
    { "THORN;"                          , L'\x000DE'},
    { "THORN"                           , L'\x000DE'},
    { "thorn;"                          , L'\x000FE'},
    { "thorn"                           , L'\x000FE'},
    { "Tilde;"                          , L'\x0223C'},
    { "tilde;"                          , L'\x002DC'},
    { "TildeEqual;"                     , L'\x02243'},
    { "TildeFullEqual;"                 , L'\x02245'},
    { "TildeTilde;"                     , L'\x02248'},
    { "times;"                          , L'\x000D7'},
    { "times"                           , L'\x000D7'},
    { "timesb;"                         , L'\x022A0'},
    { "timesbar;"                       , L'\x02A31'},
    { "timesd;"                         , L'\x02A30'},
    { "tint;"                           , L'\x0222D'},
    { "toea;"                           , L'\x02928'},
    { "top;"                            , L'\x022A4'},
    { "topbot;"                         , L'\x02336'},
    { "topcir;"                         , L'\x02AF1'},
    { "Topf;"                           , L'\x1D54B'},
    { "topf;"                           , L'\x1D565'},
    { "topfork;"                        , L'\x02ADA'},
    { "tosa;"                           , L'\x02929'},
    { "tprime;"                         , L'\x02034'},
    { "TRADE;"                          , L'\x02122'},
    { "trade;"                          , L'\x02122'},
    { "triangle;"                       , L'\x025B5'},
    { "triangledown;"                   , L'\x025BF'},
    { "triangleleft;"                   , L'\x025C3'},
    { "trianglelefteq;"                 , L'\x022B4'},
    { "triangleq;"                      , L'\x0225C'},
    { "triangleright;"                  , L'\x025B9'},
    { "trianglerighteq;"                , L'\x022B5'},
    { "tridot;"                         , L'\x025EC'},
    { "trie;"                           , L'\x0225C'},
    { "triminus;"                       , L'\x02A3A'},
    { "TripleDot;"                      , L'\x020DB'},
    { "triplus;"                        , L'\x02A39'},
    { "trisb;"                          , L'\x029CD'},
    { "tritime;"                        , L'\x02A3B'},
    { "trpezium;"                       , L'\x023E2'},
    { "Tscr;"                           , L'\x1D4AF'},
    { "tscr;"                           , L'\x1D4C9'},
    { "TScy;"                           , L'\x00426'},
    { "tscy;"                           , L'\x00446'},
    { "TSHcy;"                          , L'\x0040B'},
    { "tshcy;"                          , L'\x0045B'},
    { "Tstrok;"                         , L'\x00166'},
    { "tstrok;"                         , L'\x00167'},
    { "twixt;"                          , L'\x0226C'},
    { "twoheadleftarrow;"               , L'\x0219E'},
    { "twoheadrightarrow;"              , L'\x021A0'},
    { "Uacute;"                         , L'\x000DA'},
    { "Uacute"                          , L'\x000DA'},
    { "uacute;"                         , L'\x000FA'},
    { "uacute"                          , L'\x000FA'},
    { "Uarr;"                           , L'\x0219F'},
    { "uArr;"                           , L'\x021D1'},
    { "uarr;"                           , L'\x02191'},
    { "Uarrocir;"                       , L'\x02949'},
    { "Ubrcy;"                          , L'\x0040E'},
    { "ubrcy;"                          , L'\x0045E'},
    { "Ubreve;"                         , L'\x0016C'},
    { "ubreve;"                         , L'\x0016D'},
    { "Ucirc;"                          , L'\x000DB'},
    { "Ucirc"                           , L'\x000DB'},
    { "ucirc;"                          , L'\x000FB'},
    { "ucirc"                           , L'\x000FB'},
    { "Ucy;"                            , L'\x00423'},
    { "ucy;"                            , L'\x00443'},
    { "udarr;"                          , L'\x021C5'},
    { "Udblac;"                         , L'\x00170'},
    { "udblac;"                         , L'\x00171'},
    { "udhar;"                          , L'\x0296E'},
    { "ufisht;"                         , L'\x0297E'},
    { "Ufr;"                            , L'\x1D518'},
    { "ufr;"                            , L'\x1D532'},
    { "Ugrave;"                         , L'\x000D9'},
    { "Ugrave"                          , L'\x000D9'},
    { "ugrave;"                         , L'\x000F9'},
    { "ugrave"                          , L'\x000F9'},
    { "uHar;"                           , L'\x02963'},
    { "uharl;"                          , L'\x021BF'},
    { "uharr;"                          , L'\x021BE'},
    { "uhblk;"                          , L'\x02580'},
    { "ulcorn;"                         , L'\x0231C'},
    { "ulcorner;"                       , L'\x0231C'},
    { "ulcrop;"                         , L'\x0230F'},
    { "ultri;"                          , L'\x025F8'},
    { "Umacr;"                          , L'\x0016A'},
    { "umacr;"                          , L'\x0016B'},
    { "uml;"                            , L'\x000A8'},
    { "uml"                             , L'\x000A8'},
    { "UnderBar;"                       , L'\x0005F'},
    { "UnderBrace;"                     , L'\x023DF'},
    { "UnderBracket;"                   , L'\x023B5'},
    { "UnderParenthesis;"               , L'\x023DD'},
    { "Union;"                          , L'\x022C3'},
    { "UnionPlus;"                      , L'\x0228E'},
    { "Uogon;"                          , L'\x00172'},
    { "uogon;"                          , L'\x00173'},
    { "Uopf;"                           , L'\x1D54C'},
    { "uopf;"                           , L'\x1D566'},
    { "UpArrow;"                        , L'\x02191'},
    { "Uparrow;"                        , L'\x021D1'},
    { "uparrow;"                        , L'\x02191'},
    { "UpArrowBar;"                     , L'\x02912'},
    { "UpArrowDownArrow;"               , L'\x021C5'},
    { "UpDownArrow;"                    , L'\x02195'},
    { "Updownarrow;"                    , L'\x021D5'},
    { "updownarrow;"                    , L'\x02195'},
    { "UpEquilibrium;"                  , L'\x0296E'},
    { "upharpoonleft;"                  , L'\x021BF'},
    { "upharpoonright;"                 , L'\x021BE'},
    { "uplus;"                          , L'\x0228E'},
    { "UpperLeftArrow;"                 , L'\x02196'},
    { "UpperRightArrow;"                , L'\x02197'},
    { "Upsi;"                           , L'\x003D2'},
    { "upsi;"                           , L'\x003C5'},
    { "upsih;"                          , L'\x003D2'},
    { "Upsilon;"                        , L'\x003A5'},
    { "upsilon;"                        , L'\x003C5'},
    { "UpTee;"                          , L'\x022A5'},
    { "UpTeeArrow;"                     , L'\x021A5'},
    { "upuparrows;"                     , L'\x021C8'},
    { "urcorn;"                         , L'\x0231D'},
    { "urcorner;"                       , L'\x0231D'},
    { "urcrop;"                         , L'\x0230E'},
    { "Uring;"                          , L'\x0016E'},
    { "uring;"                          , L'\x0016F'},
    { "urtri;"                          , L'\x025F9'},
    { "Uscr;"                           , L'\x1D4B0'},
    { "uscr;"                           , L'\x1D4CA'},
    { "utdot;"                          , L'\x022F0'},
    { "Utilde;"                         , L'\x00168'},
    { "utilde;"                         , L'\x00169'},
    { "utri;"                           , L'\x025B5'},
    { "utrif;"                          , L'\x025B4'},
    { "uuarr;"                          , L'\x021C8'},
    { "Uuml;"                           , L'\x000DC'},
    { "Uuml"                            , L'\x000DC'},
    { "uuml;"                           , L'\x000FC'},
    { "uuml"                            , L'\x000FC'},
    { "uwangle;"                        , L'\x029A7'},
    { "vangrt;"                         , L'\x0299C'},
    { "varepsilon;"                     , L'\x003F5'},
    { "varkappa;"                       , L'\x003F0'},
    { "varnothing;"                     , L'\x02205'},
    { "varphi;"                         , L'\x003D5'},
    { "varpi;"                          , L'\x003D6'},
    { "varpropto;"                      , L'\x0221D'},
    { "vArr;"                           , L'\x021D5'},
    { "varr;"                           , L'\x02195'},
    { "varrho;"                         , L'\x003F1'},
    { "varsigma;"                       , L'\x003C2'},
    { "varsubsetneq;"                   , L'\x0228A'},
    { "varsubsetneqq;"                  , L'\x02ACB'},
    { "varsupsetneq;"                   , L'\x0228B'},
    { "varsupsetneqq;"                  , L'\x02ACC'},
    { "vartheta;"                       , L'\x003D1'},
    { "vartriangleleft;"                , L'\x022B2'},
    { "vartriangleright;"               , L'\x022B3'},
    { "Vbar;"                           , L'\x02AEB'},
    { "vBar;"                           , L'\x02AE8'},
    { "vBarv;"                          , L'\x02AE9'},
    { "Vcy;"                            , L'\x00412'},
    { "vcy;"                            , L'\x00432'},
    { "VDash;"                          , L'\x022AB'},
    { "Vdash;"                          , L'\x022A9'},
    { "vDash;"                          , L'\x022A8'},
    { "vdash;"                          , L'\x022A2'},
    { "Vdashl;"                         , L'\x02AE6'},
    { "Vee;"                            , L'\x022C1'},
    { "vee;"                            , L'\x02228'},
    { "veebar;"                         , L'\x022BB'},
    { "veeeq;"                          , L'\x0225A'},
    { "vellip;"                         , L'\x022EE'},
    { "Verbar;"                         , L'\x02016'},
    { "verbar;"                         , L'\x0007C'},
    { "Vert;"                           , L'\x02016'},
    { "vert;"                           , L'\x0007C'},
    { "VerticalBar;"                    , L'\x02223'},
    { "VerticalLine;"                   , L'\x0007C'},
    { "VerticalSeparator;"              , L'\x02758'},
    { "VerticalTilde;"                  , L'\x02240'},
    { "VeryThinSpace;"                  , L'\x0200A'},
    { "Vfr;"                            , L'\x1D519'},
    { "vfr;"                            , L'\x1D533'},
    { "vltri;"                          , L'\x022B2'},
    { "vnsub;"                          , L'\x02282'},
    { "vnsup;"                          , L'\x02283'},
    { "Vopf;"                           , L'\x1D54D'},
    { "vopf;"                           , L'\x1D567'},
    { "vprop;"                          , L'\x0221D'},
    { "vrtri;"                          , L'\x022B3'},
    { "Vscr;"                           , L'\x1D4B1'},
    { "vscr;"                           , L'\x1D4CB'},
    { "vsubnE;"                         , L'\x02ACB'},
    { "vsubne;"                         , L'\x0228A'},
    { "vsupnE;"                         , L'\x02ACC'},
    { "vsupne;"                         , L'\x0228B'},
    { "Vvdash;"                         , L'\x022AA'},
    { "vzigzag;"                        , L'\x0299A'},
    { "Wcirc;"                          , L'\x00174'},
    { "wcirc;"                          , L'\x00175'},
    { "wedbar;"                         , L'\x02A5F'},
    { "Wedge;"                          , L'\x022C0'},
    { "wedge;"                          , L'\x02227'},
    { "wedgeq;"                         , L'\x02259'},
    { "weierp;"                         , L'\x02118'},
    { "Wfr;"                            , L'\x1D51A'},
    { "wfr;"                            , L'\x1D534'},
    { "Wopf;"                           , L'\x1D54E'},
    { "wopf;"                           , L'\x1D568'},
    { "wp;"                             , L'\x02118'},
    { "wr;"                             , L'\x02240'},
    { "wreath;"                         , L'\x02240'},
    { "Wscr;"                           , L'\x1D4B2'},
    { "wscr;"                           , L'\x1D4CC'},
    { "xcap;"                           , L'\x022C2'},
    { "xcirc;"                          , L'\x025EF'},
    { "xcup;"                           , L'\x022C3'},
    { "xdtri;"                          , L'\x025BD'},
    { "Xfr;"                            , L'\x1D51B'},
    { "xfr;"                            , L'\x1D535'},
    { "xhArr;"                          , L'\x027FA'},
    { "xharr;"                          , L'\x027F7'},
    { "Xi;"                             , L'\x0039E'},
    { "xi;"                             , L'\x003BE'},
    { "xlArr;"                          , L'\x027F8'},
    { "xlarr;"                          , L'\x027F5'},
    { "xmap;"                           , L'\x027FC'},
    { "xnis;"                           , L'\x022FB'},
    { "xodot;"                          , L'\x02A00'},
    { "Xopf;"                           , L'\x1D54F'},
    { "xopf;"                           , L'\x1D569'},
    { "xoplus;"                         , L'\x02A01'},
    { "xotime;"                         , L'\x02A02'},
    { "xrArr;"                          , L'\x027F9'},
    { "xrarr;"                          , L'\x027F6'},
    { "Xscr;"                           , L'\x1D4B3'},
    { "xscr;"                           , L'\x1D4CD'},
    { "xsqcup;"                         , L'\x02A06'},
    { "xuplus;"                         , L'\x02A04'},
    { "xutri;"                          , L'\x025B3'},
    { "xvee;"                           , L'\x022C1'},
    { "xwedge;"                         , L'\x022C0'},
    { "Yacute;"                         , L'\x000DD'},
    { "Yacute"                          , L'\x000DD'},
    { "yacute;"                         , L'\x000FD'},
    { "yacute"                          , L'\x000FD'},
    { "YAcy;"                           , L'\x0042F'},
    { "yacy;"                           , L'\x0044F'},
    { "Ycirc;"                          , L'\x00176'},
    { "ycirc;"                          , L'\x00177'},
    { "Ycy;"                            , L'\x0042B'},
    { "ycy;"                            , L'\x0044B'},
    { "yen;"                            , L'\x000A5'},
    { "yen"                             , L'\x000A5'},
    { "Yfr;"                            , L'\x1D51C'},
    { "yfr;"                            , L'\x1D536'},
    { "YIcy;"                           , L'\x00407'},
    { "yicy;"                           , L'\x00457'},
    { "Yopf;"                           , L'\x1D550'},
    { "yopf;"                           , L'\x1D56A'},
    { "Yscr;"                           , L'\x1D4B4'},
    { "yscr;"                           , L'\x1D4CE'},
    { "YUcy;"                           , L'\x0042E'},
    { "yucy;"                           , L'\x0044E'},
    { "Yuml;"                           , L'\x00178'},
    { "yuml;"                           , L'\x000FF'},
    { "yuml"                            , L'\x000FF'},
    { "Zacute;"                         , L'\x00179'},
    { "zacute;"                         , L'\x0017A'},
    { "Zcaron;"                         , L'\x0017D'},
    { "zcaron;"                         , L'\x0017E'},
    { "Zcy;"                            , L'\x00417'},
    { "zcy;"                            , L'\x00437'},
    { "Zdot;"                           , L'\x0017B'},
    { "zdot;"                           , L'\x0017C'},
    { "zeetrf;"                         , L'\x02128'},
    { "ZeroWidthSpace;"                 , L'\x0200B'},
    { "Zeta;"                           , L'\x00396'},
    { "zeta;"                           , L'\x003B6'},
    { "Zfr;"                            , L'\x02128'},
    { "zfr;"                            , L'\x1D537'},
    { "ZHcy;"                           , L'\x00416'},
    { "zhcy;"                           , L'\x00436'},
    { "zigrarr;"                        , L'\x021DD'},
    { "Zopf;"                           , L'\x02124'},
    { "zopf;"                           , L'\x1D56B'},
    { "Zscr;"                           , L'\x1D4B5'},
    { "zscr;"                           , L'\x1D4CF'},
    { "zwj;"                            , L'\x0200D'},
    { "zwnj;"                           , L'\x0200C'}
};

struct Tag { std::string start, end; };

Tag tags[] = {
    { "<!--"   , "-->"       },
    { "<script", "</script>" },
    { "<style" , "</style>"  },
    // base case; always last
    { "<"      , ">"         }
};

template<typename It>
void consume_ent(It& it, const It& end) {
    if (it == end) { std::wcout << '&'; return; }
    if (*(it) == '#') {
        auto q = find(it+1, end, ';');
        if (q == end) { return; }
        auto size = distance(it, q+1);
        if (size < 2) { return; }
        wchar_t v = 0;
        uint8_t base = 10;
        if (*it == 'x' && size > 3) { ++it; base = 16; }
        for (uint8_t i = 1; i < size-1; ++i) {
            if (*(it+i) < '0' || *(it+i) > '9') {
                #ifdef DEBUG
                std::cerr << "[E]: " << string(it, q) << endl;
                #endif
                std::wcout << '&';
                if (base == 16) { std::wcout << 'x'; }
                return;
            }
            v *= base;
            v += *(it+i)%48;
        }
        it += size;
        std::wcout << v;
        return;
    }
    for (const auto& e: escapes) {
        if (std::equal(e.esc.begin(), e.esc.end(), it)) {
            it += e.esc.length();
            std::wcout << e.t;
            return;
        }
    }
    std::wcout << '&';
    return;
}

template<typename It>
void consume_tag(It& it, const It& end) {
    for (const auto& tag: tags) {
        if (equal(tag.start.begin(), tag.start.end(), it)) {
            for(it+=tag.start.length();
                it < end && !equal(tag.end.begin(), tag.end.end(), it); ++it) {
            }
            if (it != end) {
                it+= tag.end.length();
            }
            return;
        }
    }
    // unreacheable
    std::wcout << *it++;
    return;
}

int main(int argc, char *argv[]) {
    if (argc != 1) {
        fprintf(stderr, "Usage:\t%s\nScope:\textracts strings from a html doc"
               " given to stdin\n", argv[0]);
        exit(EXIT_FAILURE);
    }
    std::locale::global(std::locale(""));
    std::vector<wchar_t> in(std::istreambuf_iterator<wchar_t>{std::wcin}, {});
    auto it = in.cbegin();
    while (it < in.cend()) {
        if (*it == '<') {
            consume_tag(it, in.cend());
        } else if (*it == '&') {
            consume_ent(++it, in.cend());
        } else {
            std::wcout << *it++;
        }
    }
    return 0;
}
